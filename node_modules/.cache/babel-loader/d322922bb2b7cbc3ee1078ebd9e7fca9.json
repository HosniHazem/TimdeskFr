{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"componentsProps\", \"max\", \"spacing\", \"total\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar, { avatarClasses } from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\n\nconst useUtilityClasses = ownerState => {\n  const classes = ownerState.classes;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\n\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n  }, styles.root)\n})(({\n  theme\n}) => ({\n  [`& .${avatarClasses.root}`]: {\n    border: `2px solid ${theme.palette.background.default}`,\n    boxSizing: 'content-box',\n    marginLeft: -8,\n    '&:last-child': {\n      marginLeft: 0\n    }\n  },\n  display: 'flex',\n  flexDirection: 'row-reverse'\n}));\nconst AvatarGroupAvatar = styled(Avatar, {\n  name: 'MuiAvatarGroup',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})(({\n  theme\n}) => ({\n  border: `2px solid ${theme.palette.background.default}`,\n  boxSizing: 'content-box',\n  marginLeft: -8,\n  '&:last-child': {\n    marginLeft: 0\n  }\n}));\nconst AvatarGroup =\n/*#__PURE__*/\nReact.forwardRef(function AvatarGroup(inProps, ref) {\n  var _componentsProps$addi, _componentsProps$addi2;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n\n  const childrenProp = props.children,\n        className = props.className,\n        _props$componentsProp = props.componentsProps,\n        componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n        _props$max = props.max,\n        max = _props$max === void 0 ? 5 : _props$max,\n        _props$spacing = props.spacing,\n        spacing = _props$spacing === void 0 ? 'medium' : _props$spacing,\n        total = props.total,\n        _props$variant = props.variant,\n        variant = _props$variant === void 0 ? 'circular' : _props$variant,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  let clampedMax = max < 2 ? 2 : max;\n\n  const ownerState = _extends({}, props, {\n    max,\n    spacing,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return (\n      /*#__PURE__*/\n      React.isValidElement(child)\n    );\n  });\n  const totalAvatars = total || children.length;\n\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  return (\n    /*#__PURE__*/\n    _jsxs(AvatarGroupRoot, _extends({\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: [extraAvatars ?\n      /*#__PURE__*/\n      _jsxs(AvatarGroupAvatar, _extends({\n        ownerState: ownerState,\n        variant: variant\n      }, componentsProps.additionalAvatar, {\n        className: clsx(classes.avatar, (_componentsProps$addi = componentsProps.additionalAvatar) == null ? void 0 : _componentsProps$addi.className),\n        style: _extends({\n          marginLeft\n        }, (_componentsProps$addi2 = componentsProps.additionalAvatar) == null ? void 0 : _componentsProps$addi2.style),\n        children: [\"+\", extraAvatars]\n      })) : null, children.slice(0, maxAvatars).reverse().map((child, index) => {\n        return (\n          /*#__PURE__*/\n          React.cloneElement(child, {\n            className: clsx(child.props.className, classes.avatar),\n            style: _extends({\n              // Consistent with \"&:last-child\" styling for the default spacing,\n              // we do not apply custom marginLeft spacing on the last child\n              marginLeft: index === maxAvatars - 1 ? undefined : marginLeft\n            }, child.props.style),\n            variant: child.props.variant || variant\n          })\n        );\n      })]\n    }))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The props used for each slot inside the AvatarGroup.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;","map":{"version":3,"sources":["C:/Users/HAZEM/Desktop/template/node_modules/@mui/material/AvatarGroup/AvatarGroup.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","isFragment","clsx","chainPropTypes","unstable_composeClasses","composeClasses","styled","useThemeProps","Avatar","avatarClasses","avatarGroupClasses","getAvatarGroupUtilityClass","jsxs","_jsxs","SPACINGS","small","medium","useUtilityClasses","ownerState","classes","slots","root","avatar","AvatarGroupRoot","name","slot","overridesResolver","props","styles","theme","border","palette","background","default","boxSizing","marginLeft","display","flexDirection","AvatarGroupAvatar","AvatarGroup","forwardRef","inProps","ref","_componentsProps$addi","_componentsProps$addi2","childrenProp","children","className","componentsProps","max","spacing","total","variant","other","clampedMax","Children","toArray","filter","child","process","env","NODE_ENV","console","error","join","isValidElement","totalAvatars","length","Math","min","maxAvatars","extraAvatars","undefined","additionalAvatar","style","slice","reverse","map","index","cloneElement","propTypes","node","object","string","shape","number","Error","oneOfType","oneOf","sx","arrayOf","func","bool"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"componentsProps\", \"max\", \"spacing\", \"total\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar, { avatarClasses } from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\n\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n  }, styles.root)\n})(({\n  theme\n}) => ({\n  [`& .${avatarClasses.root}`]: {\n    border: `2px solid ${theme.palette.background.default}`,\n    boxSizing: 'content-box',\n    marginLeft: -8,\n    '&:last-child': {\n      marginLeft: 0\n    }\n  },\n  display: 'flex',\n  flexDirection: 'row-reverse'\n}));\nconst AvatarGroupAvatar = styled(Avatar, {\n  name: 'MuiAvatarGroup',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})(({\n  theme\n}) => ({\n  border: `2px solid ${theme.palette.background.default}`,\n  boxSizing: 'content-box',\n  marginLeft: -8,\n  '&:last-child': {\n    marginLeft: 0\n  }\n}));\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  var _componentsProps$addi, _componentsProps$addi2;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n\n  const {\n    children: childrenProp,\n    className,\n    componentsProps = {},\n    max = 5,\n    spacing = 'medium',\n    total,\n    variant = 'circular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  let clampedMax = max < 2 ? 2 : max;\n\n  const ownerState = _extends({}, props, {\n    max,\n    spacing,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsxs(AvatarGroupAvatar, _extends({\n      ownerState: ownerState,\n      variant: variant\n    }, componentsProps.additionalAvatar, {\n      className: clsx(classes.avatar, (_componentsProps$addi = componentsProps.additionalAvatar) == null ? void 0 : _componentsProps$addi.className),\n      style: _extends({\n        marginLeft\n      }, (_componentsProps$addi2 = componentsProps.additionalAvatar) == null ? void 0 : _componentsProps$addi2.style),\n      children: [\"+\", extraAvatars]\n    })) : null, children.slice(0, maxAvatars).reverse().map((child, index) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        style: _extends({\n          // Consistent with \"&:last-child\" styling for the default spacing,\n          // we do not apply custom marginLeft spacing on the last child\n          marginLeft: index === maxAvatars - 1 ? undefined : marginLeft\n        }, child.props.style),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The props used for each slot inside the AvatarGroup.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;"]},"metadata":{},"sourceType":"module"}