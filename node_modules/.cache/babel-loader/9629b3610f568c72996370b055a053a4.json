{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\HAZEM\\\\Desktop\\\\template\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HAZEM\\\\Desktop\\\\template\\\\src\\\\app\\\\Session\\\\login.js\";\nimport AuthUser from './AuthUser';\nimport { Card, Grid, Button, Checkbox, CircularProgress, FormControlLabel } from '@mui/material';\nimport { useState } from \"react\";\nimport { Box, styled } from '@mui/system';\nimport { Paragraph } from './Typography';\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\nimport React, { Component } from 'react';\nconst FlexBox = styled(Box)(() => ({\n  display: 'flex',\n  alignItems: 'center'\n}));\nconst JustifyBox = styled(FlexBox)(() => ({\n  justifyContent: 'center'\n}));\nconst ContentBox = styled(Box)(() => ({\n  height: '100%',\n  padding: '32px',\n  position: 'relative',\n  background: 'rgba(0, 0, 0, 0.01)'\n}));\nconst IMG = styled('img')(() => ({\n  width: '100%'\n}));\nconst JWTRoot = styled(JustifyBox)(() => ({\n  background: '#1A2038',\n  minHeight: '100% !important',\n  position: 'fixed',\n  width: '100%',\n  height: '100%',\n  left: '0',\n  top: '0',\n  '& .card': {\n    maxWidth: 800,\n    borderRadius: 12,\n    margin: '1rem'\n  }\n}));\nconst StyledProgress = styled(CircularProgress)(() => ({\n  position: 'absolute',\n  top: '6px',\n  left: '25px'\n}));\n\nconst ERR = () => ({\n  color: '#D8000C'\n});\n\nexport default function Login() {\n  const _AuthUser = AuthUser(),\n        http = _AuthUser.http,\n        setToken = _AuthUser.setToken;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPwd = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1];\n\n  const submitForm = async e => {\n    // api call\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      const response = await http.post('/login', {\n        email: email,\n        password: password\n      }).then(res => {\n        setToken(res.data.user, res.data.access_token);\n      });\n      setEmail('');\n      setPwd('');\n      console.log(JSON.stringify(response === null || response === void 0 ? void 0 : response.data));\n    } catch (err) {\n      console.log(err);\n      setMessage(err.message);\n      setLoading(false);\n    }\n  };\n\n  return React.createElement(JWTRoot, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    lg: 5,\n    md: 5,\n    sm: 5,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(JustifyBox, {\n    p: 4,\n    height: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(IMG, {\n    src: \"/assets/dreamer.svg\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    lg: 7,\n    md: 7,\n    sm: 7,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(ContentBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(ValidatorForm, {\n    onSubmit: submitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(TextValidator, {\n    sx: {\n      mb: 3,\n      width: '100%'\n    },\n    variant: \"outlined\",\n    size: \"small\",\n    label: \"Email\",\n    type: \"email\",\n    name: \"email\",\n    onChange: e => setEmail(e.target.value),\n    value: email,\n    validators: ['required', 'isEmail'],\n    errorMessages: ['this field is required', 'email is not valid'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(TextValidator, {\n    sx: {\n      mb: '12px',\n      width: '100%'\n    },\n    label: \"Password\",\n    variant: \"outlined\",\n    size: \"small\",\n    name: \"password\",\n    type: \"password\",\n    onChange: e => setPwd(e.target.value),\n    value: password,\n    validators: ['required'],\n    errorMessages: ['this field is required'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    sx: {\n      mb: '12px',\n      maxWidth: 288\n    },\n    name: \"agreement\",\n    control: React.createElement(Checkbox, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }),\n    label: \"Remeber me\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }), message && React.createElement(Paragraph, {\n    className: \"Er\",\n    sx: {\n      color: ERR\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, message), React.createElement(FlexBox, {\n    mb: 2,\n    flexWrap: \"wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Box, {\n    position: \"relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    disabled: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Sign in\"), loading && React.createElement(StyledProgress, {\n    size: 24,\n    className: \"buttonProgress\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Forgot password?\")))))));\n}","map":{"version":3,"sources":["C:/Users/HAZEM/Desktop/template/src/app/Session/login.js"],"names":["AuthUser","Card","Grid","Button","Checkbox","CircularProgress","FormControlLabel","useState","Box","styled","Paragraph","TextValidator","ValidatorForm","React","Component","FlexBox","display","alignItems","JustifyBox","justifyContent","ContentBox","height","padding","position","background","IMG","width","JWTRoot","minHeight","left","top","maxWidth","borderRadius","margin","StyledProgress","ERR","color","Login","http","setToken","email","setEmail","password","setPwd","loading","setLoading","message","setMessage","submitForm","e","preventDefault","response","post","then","res","data","user","access_token","console","log","JSON","stringify","err","mb","target","value"],"mappings":"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","sourcesContent":["import AuthUser from './AuthUser';\r\nimport {\r\n    Card,\r\n    Grid,\r\n    Button,\r\n    Checkbox,\r\n    CircularProgress,\r\n    FormControlLabel,\r\n  } from '@mui/material'\r\n  import { useState } from \"react\";\r\n  import {Box, styled } from '@mui/system'\r\n  import { Paragraph } from './Typography'\r\n  import { TextValidator, ValidatorForm } from 'react-material-ui-form-validator'\r\n  import React, { Component } from 'react'\r\n\r\n  const FlexBox = styled(Box)(() => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  }))\r\n  \r\n  const JustifyBox = styled(FlexBox)(() => ({\r\n    justifyContent: 'center',\r\n  }))\r\n  \r\n  const ContentBox = styled(Box)(() => ({\r\n    height: '100%',\r\n    padding: '32px',\r\n    position: 'relative',\r\n    background: 'rgba(0, 0, 0, 0.01)',\r\n  }))\r\n  \r\n  const IMG = styled('img')(() => ({\r\n    width: '100%',\r\n  }))\r\n  \r\n  const JWTRoot = styled(JustifyBox)(() => ({\r\n    background: '#1A2038',\r\n    minHeight: '100% !important',\r\n    position: 'fixed',\r\n      width: '100%',\r\n      height: '100%',\r\n      left: '0',\r\n      top: '0',\r\n    '& .card': {\r\n        maxWidth: 800,\r\n        borderRadius: 12,\r\n        margin: '1rem',\r\n    },\r\n  }))\r\n  \r\n  const StyledProgress = styled(CircularProgress)(() => ({\r\n    position: 'absolute',\r\n    top: '6px',\r\n    left: '25px',\r\n  }))\r\n  const ERR = () => ({\r\n    color: '#D8000C',\r\n  })\r\n  \r\nexport default function Login() {\r\n    \r\n    const {http,setToken} = AuthUser()\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPwd] = useState('')\r\n  \r\n    const [loading, setLoading] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n    const submitForm = async (e) =>{\r\n        \r\n        \r\n        // api call\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        try{\r\n            const response = await http.post('/login',{email:email,password:password}).then((res)=>{\r\n            setToken(res.data.user,res.data.access_token);\r\n        })\r\n                setEmail('');\r\n                setPwd('');\r\n                console.log(JSON.stringify(response?.data));\r\n        }catch(err){\r\n            console.log(err);\r\n            setMessage(err.message);\r\n            setLoading(false);\r\n          }\r\n\r\n\r\n    }\r\n   \r\n    return(\r\n        \r\n        <JWTRoot>\r\n        <Card className=\"card\">\r\n                    <Grid container>\r\n                        <Grid item lg={5} md={5} sm={5} xs={12}>\r\n                            <JustifyBox p={4} height=\"100%\">\r\n                                <IMG\r\n                                    src=\"/assets/dreamer.svg\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </JustifyBox>\r\n                        </Grid>\r\n                        <Grid item lg={7} md={7} sm={7} xs={12}>\r\n                            <ContentBox>\r\n                                <ValidatorForm onSubmit={submitForm}>\r\n                                    <TextValidator\r\n                                        sx={{ mb: 3, width: '100%' }}\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        label=\"Email\"\r\n    \r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        onChange={e=>setEmail(e.target.value)}\r\n                                        value={email}\r\n                                        validators={['required', 'isEmail']}\r\n                                        errorMessages={[\r\n                                            'this field is required',\r\n                                            'email is not valid',\r\n                                        ]}\r\n                                    />\r\n                                    <TextValidator\r\n                                        sx={{ mb: '12px', width: '100%' }}\r\n                                        label=\"Password\"\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n    \r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n    \r\n                                        onChange={e => setPwd(e.target.value)}\r\n                                        value={password}\r\n    \r\n    \r\n                                        validators={['required']}\r\n                                        errorMessages={['this field is required']}\r\n                                    />\r\n                                    <FormControlLabel\r\n                                        sx={{ mb: '12px', maxWidth: 288 }}\r\n                                        name=\"agreement\"\r\n    \r\n                                        control={\r\n                                            <Checkbox\r\n                                                size=\"small\"\r\n    \r\n    \r\n    \r\n                                            />\r\n                                        }\r\n                                        label=\"Remeber me\"\r\n                                    />\r\n                                     {message && (\r\n                                        <Paragraph className=\"Er\" sx={{ color: ERR }}>\r\n                                            {message}\r\n                                        </Paragraph>\r\n                                    )}\r\n    \r\n                                    <FlexBox mb={2} flexWrap=\"wrap\">\r\n                                        <Box position=\"relative\">\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                type=\"submit\"\r\n                                                disabled={loading}\r\n                                            >\r\n                                                Sign in\r\n                                            </Button>\r\n                                            {\r\n                                              loading && (\r\n                                                <StyledProgress\r\n                                                    size={24}\r\n                                                    className=\"buttonProgress\"\r\n                                                />\r\n                                              )}\r\n                                        </Box>\r\n    \r\n                                    </FlexBox>\r\n                                    <Button>\r\n                                        Forgot password?\r\n                                    </Button>\r\n                                </ValidatorForm>\r\n                            </ContentBox>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Card>\r\n                </JWTRoot>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}