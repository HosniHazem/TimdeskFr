{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\HAZEM\\\\Desktop\\\\template\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const classes = ownerState.classes,\n        checked = ownerState.checked,\n        disabled = ownerState.disabled,\n        edge = ownerState.edge;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase =\n/*#__PURE__*/\nReact.forwardRef(function SwitchBase(props, ref) {\n  const autoFocus = props.autoFocus,\n        checkedProp = props.checked,\n        checkedIcon = props.checkedIcon,\n        className = props.className,\n        defaultChecked = props.defaultChecked,\n        disabledProp = props.disabled,\n        _props$disableFocusRi = props.disableFocusRipple,\n        disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n        _props$edge = props.edge,\n        edge = _props$edge === void 0 ? false : _props$edge,\n        icon = props.icon,\n        id = props.id,\n        inputProps = props.inputProps,\n        inputRef = props.inputRef,\n        name = props.name,\n        onBlur = props.onBlur,\n        onChange = props.onChange,\n        onFocus = props.onFocus,\n        readOnly = props.readOnly,\n        required = props.required,\n        tabIndex = props.tabIndex,\n        type = props.type,\n        value = props.value,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n        _useControlled2 = _slicedToArray(_useControlled, 2),\n        checked = _useControlled2[0],\n        setCheckedState = _useControlled2[1];\n\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return (\n    /*#__PURE__*/\n    _jsxs(SwitchBaseRoot, _extends({\n      component: \"span\",\n      className: clsx(classes.root, className),\n      centerRipple: true,\n      focusRipple: !disableFocusRipple,\n      disabled: disabled,\n      tabIndex: null,\n      role: undefined,\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      ownerState: ownerState,\n      ref: ref\n    }, other, {\n      children: [\n      /*#__PURE__*/\n      _jsx(SwitchBaseInput, _extends({\n        autoFocus: autoFocus,\n        checked: checkedProp,\n        defaultChecked: defaultChecked,\n        className: classes.input,\n        disabled: disabled,\n        id: hasLabelFor && id,\n        name: name,\n        onChange: handleInputChange,\n        readOnly: readOnly,\n        ref: inputRef,\n        required: required,\n        ownerState: ownerState,\n        tabIndex: tabIndex,\n        type: type\n      }, type === 'checkbox' && value === undefined ? {} : {\n        value\n      }, inputProps)), checked ? checkedIcon : icon]\n    }))\n  );\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","map":{"version":3,"sources":["C:/Users/HAZEM/Desktop/template/node_modules/@mui/material/internal/SwitchBase.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","refType","unstable_composeClasses","composeClasses","capitalize","styled","useControlled","useFormControl","ButtonBase","getSwitchBaseUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","checked","disabled","edge","slots","root","input","SwitchBaseRoot","padding","borderRadius","marginLeft","size","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","SwitchBase","forwardRef","props","ref","autoFocus","checkedProp","checkedIcon","className","defaultChecked","disabledProp","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","controlled","default","Boolean","state","setCheckedState","muiFormControl","handleFocus","event","handleBlur","handleInputChange","nativeEvent","defaultPrevented","newChecked","target","hasLabelFor","component","centerRipple","focusRipple","role","undefined","children","process","env","NODE_ENV","propTypes","bool","node","isRequired","object","string","oneOf","func","sx","oneOfType","number","any"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"]},"metadata":{},"sourceType":"module"}