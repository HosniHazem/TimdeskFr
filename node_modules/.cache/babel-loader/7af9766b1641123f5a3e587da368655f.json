{"ast":null,"code":"import * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_MODE_STORAGE_KEY = 'mui-mode';\nexport const DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'mui-color-scheme';\nexport const DEFAULT_ATTRIBUTE = 'data-mui-color-scheme';\nexport default function getInitColorSchemeScript(options) {\n  const _ref = options || {},\n        enableSystem = _ref.enableSystem,\n        _ref$defaultLightColo = _ref.defaultLightColorScheme,\n        defaultLightColorScheme = _ref$defaultLightColo === void 0 ? 'light' : _ref$defaultLightColo,\n        _ref$defaultDarkColor = _ref.defaultDarkColorScheme,\n        defaultDarkColorScheme = _ref$defaultDarkColor === void 0 ? 'dark' : _ref$defaultDarkColor,\n        _ref$modeStorageKey = _ref.modeStorageKey,\n        modeStorageKey = _ref$modeStorageKey === void 0 ? DEFAULT_MODE_STORAGE_KEY : _ref$modeStorageKey,\n        _ref$colorSchemeStora = _ref.colorSchemeStorageKey,\n        colorSchemeStorageKey = _ref$colorSchemeStora === void 0 ? DEFAULT_COLOR_SCHEME_STORAGE_KEY : _ref$colorSchemeStora,\n        _ref$attribute = _ref.attribute,\n        attribute = _ref$attribute === void 0 ? DEFAULT_ATTRIBUTE : _ref$attribute;\n\n  return (\n    /*#__PURE__*/\n    _jsx(\"script\", {\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML: {\n        __html: `(function() { try {\n        var mode = localStorage.getItem('${modeStorageKey}');\n        var colorScheme = '';\n        if (mode === 'system' || (!mode && !!${enableSystem})) {\n          // handle system mode\n          var mql = window.matchMedia('(prefers-color-scheme: dark)');\n          if (mql.matches) {\n            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n          } else {\n            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n          }\n        }\n        if (mode === 'light') {\n          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n        }\n        if (mode === 'dark') {\n          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n        }\n        if (colorScheme) {\n          document.documentElement.setAttribute('${attribute}', colorScheme);\n        }\n      } catch (e) {} })();`\n      }\n    })\n  );\n}","map":{"version":3,"sources":["C:/Users/HAZEM/Desktop/template/node_modules/@mui/system/esm/cssVars/getInitColorSchemeScript.js"],"names":["React","jsx","_jsx","DEFAULT_MODE_STORAGE_KEY","DEFAULT_COLOR_SCHEME_STORAGE_KEY","DEFAULT_ATTRIBUTE","getInitColorSchemeScript","options","enableSystem","defaultLightColorScheme","defaultDarkColorScheme","modeStorageKey","colorSchemeStorageKey","attribute","dangerouslySetInnerHTML","__html"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,OAAO,MAAMC,wBAAwB,GAAG,UAAjC;AACP,OAAO,MAAMC,gCAAgC,GAAG,kBAAzC;AACP,OAAO,MAAMC,iBAAiB,GAAG,uBAA1B;AACP,eAAe,SAASC,wBAAT,CAAkCC,OAAlC,EAA2C;AAAA,eAQpDA,OAAO,IAAI,EARyC;AAAA,QAEtDC,YAFsD,QAEtDA,YAFsD;AAAA,qCAGtDC,uBAHsD;AAAA,QAGtDA,uBAHsD,sCAG5B,OAH4B;AAAA,qCAItDC,sBAJsD;AAAA,QAItDA,sBAJsD,sCAI7B,MAJ6B;AAAA,mCAKtDC,cALsD;AAAA,QAKtDA,cALsD,oCAKrCR,wBALqC;AAAA,qCAMtDS,qBANsD;AAAA,QAMtDA,qBANsD,sCAM9BR,gCAN8B;AAAA,8BAOtDS,SAPsD;AAAA,QAOtDA,SAPsD,+BAO1CR,iBAP0C;;AASxD;AAAO;AAAaH,IAAAA,IAAI,CAAC,QAAD,EAAW;AACjC;AACAY,MAAAA,uBAAuB,EAAE;AACvBC,QAAAA,MAAM,EAAG;2CAC4BJ,cAAe;;+CAEXH,YAAa;;;;kDAIVI,qBAAsB,eAAcF,sBAAuB;;kDAE3DE,qBAAsB,gBAAeH,uBAAwB;;;;gDAI/DG,qBAAsB,gBAAeH,uBAAwB;;;gDAG7DG,qBAAsB,eAAcF,sBAAuB;;;mDAGxDG,SAAU;;;AApBhC;AAFQ,KAAX;AAAxB;AA2BD","sourcesContent":["import * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_MODE_STORAGE_KEY = 'mui-mode';\nexport const DEFAULT_COLOR_SCHEME_STORAGE_KEY = 'mui-color-scheme';\nexport const DEFAULT_ATTRIBUTE = 'data-mui-color-scheme';\nexport default function getInitColorSchemeScript(options) {\n  const {\n    enableSystem,\n    defaultLightColorScheme = 'light',\n    defaultDarkColorScheme = 'dark',\n    modeStorageKey = DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey = DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    attribute = DEFAULT_ATTRIBUTE\n  } = options || {};\n  return /*#__PURE__*/_jsx(\"script\", {\n    // eslint-disable-next-line react/no-danger\n    dangerouslySetInnerHTML: {\n      __html: `(function() { try {\n        var mode = localStorage.getItem('${modeStorageKey}');\n        var colorScheme = '';\n        if (mode === 'system' || (!mode && !!${enableSystem})) {\n          // handle system mode\n          var mql = window.matchMedia('(prefers-color-scheme: dark)');\n          if (mql.matches) {\n            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n          } else {\n            colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n          }\n        }\n        if (mode === 'light') {\n          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n        }\n        if (mode === 'dark') {\n          colorScheme = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n        }\n        if (colorScheme) {\n          document.documentElement.setAttribute('${attribute}', colorScheme);\n        }\n      } catch (e) {} })();`\n    }\n  });\n}"]},"metadata":{},"sourceType":"module"}