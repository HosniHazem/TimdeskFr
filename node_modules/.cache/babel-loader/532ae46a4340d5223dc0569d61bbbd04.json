{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"component\", \"components\", \"componentsProps\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport BadgeUnstyled from '@mui/base/BadgeUnstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport shouldSpreadAdditionalProps from '../utils/shouldSpreadAdditionalProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\n\nconst useUtilityClasses = ownerState => {\n  const color = ownerState.color,\n        anchorOrigin = ownerState.anchorOrigin,\n        invisible = ownerState.invisible,\n        overlap = ownerState.overlap,\n        variant = ownerState.variant,\n        _ownerState$classes = ownerState.classes,\n        classes = _ownerState$classes === void 0 ? {} : _ownerState$classes;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\n\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const ownerState = props.ownerState;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, ownerState.color !== 'default' && {\n  backgroundColor: theme.palette[ownerState.color].main,\n  color: theme.palette[ownerState.color].contrastText\n}, ownerState.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge =\n/*#__PURE__*/\nReact.forwardRef(function Badge(inProps, ref) {\n  var _componentsProps$root, _componentsProps$root2, _componentsProps$badg, _componentsProps$badg2;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n\n  const _props$anchorOrigin = props.anchorOrigin,\n        anchorOriginProp = _props$anchorOrigin === void 0 ? {\n    vertical: 'top',\n    horizontal: 'right'\n  } : _props$anchorOrigin,\n        className = props.className,\n        _props$component = props.component,\n        component = _props$component === void 0 ? 'span' : _props$component,\n        _props$components = props.components,\n        components = _props$components === void 0 ? {} : _props$components,\n        _props$componentsProp = props.componentsProps,\n        componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n        _props$overlap = props.overlap,\n        overlapProp = _props$overlap === void 0 ? 'rectangular' : _props$overlap,\n        _props$color = props.color,\n        colorProp = _props$color === void 0 ? 'default' : _props$color,\n        _props$invisible = props.invisible,\n        invisibleProp = _props$invisible === void 0 ? false : _props$invisible,\n        max = props.max,\n        badgeContentProp = props.badgeContent,\n        _props$showZero = props.showZero,\n        showZero = _props$showZero === void 0 ? false : _props$showZero,\n        _props$variant = props.variant,\n        variantProp = _props$variant === void 0 ? 'standard' : _props$variant,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  const _ref = invisible ? prevProps : props,\n        _ref$color = _ref.color,\n        color = _ref$color === void 0 ? colorProp : _ref$color,\n        _ref$overlap = _ref.overlap,\n        overlap = _ref$overlap === void 0 ? overlapProp : _ref$overlap,\n        _ref$anchorOrigin = _ref.anchorOrigin,\n        anchorOrigin = _ref$anchorOrigin === void 0 ? anchorOriginProp : _ref$anchorOrigin,\n        _ref$variant = _ref.variant,\n        variant = _ref$variant === void 0 ? variantProp : _ref$variant;\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    invisible,\n    color,\n    overlap,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let displayValue;\n\n  if (variant !== 'dot') {\n    displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n  }\n\n  return (\n    /*#__PURE__*/\n    _jsx(BadgeUnstyled, _extends({\n      invisible: invisibleProp,\n      badgeContent: displayValue,\n      showZero: showZero,\n      max: max\n    }, other, {\n      components: _extends({\n        Root: BadgeRoot,\n        Badge: BadgeBadge\n      }, components),\n      className: clsx(className, classes.root, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className),\n      componentsProps: {\n        root: _extends({}, componentsProps.root, shouldSpreadAdditionalProps(components.Root) && {\n          as: component,\n          ownerState: _extends({}, (_componentsProps$root2 = componentsProps.root) == null ? void 0 : _componentsProps$root2.ownerState, {\n            anchorOrigin,\n            color,\n            overlap,\n            variant\n          })\n        }),\n        badge: _extends({}, componentsProps.badge, {\n          className: clsx(classes.badge, (_componentsProps$badg = componentsProps.badge) == null ? void 0 : _componentsProps$badg.className)\n        }, shouldSpreadAdditionalProps(components.Badge) && {\n          ownerState: _extends({}, (_componentsProps$badg2 = componentsProps.badge) == null ? void 0 : _componentsProps$badg2.ownerState, {\n            anchorOrigin,\n            color,\n            overlap,\n            variant\n          })\n        })\n      },\n      ref: ref\n    }))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","map":{"version":3,"sources":["C:/Users/HAZEM/Desktop/template/node_modules/@mui/material/Badge/Badge.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","usePreviousProps","composeClasses","BadgeUnstyled","styled","useThemeProps","shouldSpreadAdditionalProps","capitalize","badgeClasses","getBadgeUtilityClass","jsx","_jsx","RADIUS_STANDARD","RADIUS_DOT","useUtilityClasses","ownerState","color","anchorOrigin","invisible","overlap","variant","classes","slots","root","badge","vertical","horizontal","BadgeRoot","name","slot","overridesResolver","props","styles","position","display","verticalAlign","flexShrink","BadgeBadge","theme","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","backgroundColor","palette","main","contrastText","top","right","transform","transformOrigin","bottom","left","leavingScreen","Badge","forwardRef","inProps","ref","_componentsProps$root","_componentsProps$root2","_componentsProps$badg","_componentsProps$badg2","anchorOriginProp","className","component","components","componentsProps","overlapProp","colorProp","invisibleProp","max","badgeContentProp","badgeContent","showZero","variantProp","other","prevProps","displayValue","Number","Root","as","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","node","children","object","string","oneOfType","elementType","bool","number","sx","arrayOf","func"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"component\", \"components\", \"componentsProps\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport BadgeUnstyled from '@mui/base/BadgeUnstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport shouldSpreadAdditionalProps from '../utils/shouldSpreadAdditionalProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\n\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\n\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, ownerState.color !== 'default' && {\n  backgroundColor: theme.palette[ownerState.color].main,\n  color: theme.palette[ownerState.color].contrastText\n}, ownerState.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _componentsProps$root, _componentsProps$root2, _componentsProps$badg, _componentsProps$badg2;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    className,\n    component = 'span',\n    components = {},\n    componentsProps = {},\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max,\n    badgeContent: badgeContentProp,\n    showZero = false,\n    variant: variantProp = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    invisible,\n    color,\n    overlap,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let displayValue;\n\n  if (variant !== 'dot') {\n    displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n  }\n\n  return /*#__PURE__*/_jsx(BadgeUnstyled, _extends({\n    invisible: invisibleProp,\n    badgeContent: displayValue,\n    showZero: showZero,\n    max: max\n  }, other, {\n    components: _extends({\n      Root: BadgeRoot,\n      Badge: BadgeBadge\n    }, components),\n    className: clsx(className, classes.root, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className),\n    componentsProps: {\n      root: _extends({}, componentsProps.root, shouldSpreadAdditionalProps(components.Root) && {\n        as: component,\n        ownerState: _extends({}, (_componentsProps$root2 = componentsProps.root) == null ? void 0 : _componentsProps$root2.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      }),\n      badge: _extends({}, componentsProps.badge, {\n        className: clsx(classes.badge, (_componentsProps$badg = componentsProps.badge) == null ? void 0 : _componentsProps$badg.className)\n      }, shouldSpreadAdditionalProps(components.Badge) && {\n        ownerState: _extends({}, (_componentsProps$badg2 = componentsProps.badge) == null ? void 0 : _componentsProps$badg2.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      })\n    },\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;"]},"metadata":{},"sourceType":"module"}