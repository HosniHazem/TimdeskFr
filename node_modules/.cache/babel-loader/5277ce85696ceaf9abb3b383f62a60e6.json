{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\HAZEM\\\\Desktop\\\\template\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"action\", \"centerRipple\", \"children\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"LinkComponent\", \"onBlur\", \"onClick\", \"onContextMenu\", \"onDragLeave\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"tabIndex\", \"TouchRippleProps\", \"touchRippleRef\", \"type\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nimport buttonBaseClasses, { getButtonBaseUtilityClass } from './buttonBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const disabled = ownerState.disabled,\n        focusVisible = ownerState.focusVisible,\n        focusVisibleClassName = ownerState.focusVisibleClassName,\n        classes = ownerState.classes;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  const composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes);\n\n  if (focusVisible && focusVisibleClassName) {\n    composedClasses.root += ` ${focusVisibleClassName}`;\n  }\n\n  return composedClasses;\n};\n\nexport const ButtonBaseRoot = styled('button', {\n  name: 'MuiButtonBase',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'relative',\n  boxSizing: 'border-box',\n  WebkitTapHighlightColor: 'transparent',\n  backgroundColor: 'transparent',\n  // Reset default value\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  border: 0,\n  margin: 0,\n  // Remove the margin in Safari\n  borderRadius: 0,\n  padding: 0,\n  // Remove the padding in Firefox\n  cursor: 'pointer',\n  userSelect: 'none',\n  verticalAlign: 'middle',\n  MozAppearance: 'none',\n  // Reset\n  WebkitAppearance: 'none',\n  // Reset\n  textDecoration: 'none',\n  // So we take precedent over the style of a native <a /> element.\n  color: 'inherit',\n  '&::-moz-focus-inner': {\n    borderStyle: 'none' // Remove Firefox dotted outline.\n\n  },\n  [`&.${buttonBaseClasses.disabled}`]: {\n    pointerEvents: 'none',\n    // Disable link interactions\n    cursor: 'default'\n  },\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n});\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nconst ButtonBase =\n/*#__PURE__*/\nReact.forwardRef(function ButtonBase(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiButtonBase'\n  });\n\n  const action = props.action,\n        _props$centerRipple = props.centerRipple,\n        centerRipple = _props$centerRipple === void 0 ? false : _props$centerRipple,\n        children = props.children,\n        className = props.className,\n        _props$component = props.component,\n        component = _props$component === void 0 ? 'button' : _props$component,\n        _props$disabled = props.disabled,\n        disabled = _props$disabled === void 0 ? false : _props$disabled,\n        _props$disableRipple = props.disableRipple,\n        disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n        _props$disableTouchRi = props.disableTouchRipple,\n        disableTouchRipple = _props$disableTouchRi === void 0 ? false : _props$disableTouchRi,\n        _props$focusRipple = props.focusRipple,\n        focusRipple = _props$focusRipple === void 0 ? false : _props$focusRipple,\n        _props$LinkComponent = props.LinkComponent,\n        LinkComponent = _props$LinkComponent === void 0 ? 'a' : _props$LinkComponent,\n        onBlur = props.onBlur,\n        onClick = props.onClick,\n        onContextMenu = props.onContextMenu,\n        onDragLeave = props.onDragLeave,\n        onFocus = props.onFocus,\n        onFocusVisible = props.onFocusVisible,\n        onKeyDown = props.onKeyDown,\n        onKeyUp = props.onKeyUp,\n        onMouseDown = props.onMouseDown,\n        onMouseLeave = props.onMouseLeave,\n        onMouseUp = props.onMouseUp,\n        onTouchEnd = props.onTouchEnd,\n        onTouchMove = props.onTouchMove,\n        onTouchStart = props.onTouchStart,\n        _props$tabIndex = props.tabIndex,\n        tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n        TouchRippleProps = props.TouchRippleProps,\n        touchRippleRef = props.touchRippleRef,\n        type = props.type,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const buttonRef = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRippleRef = useForkRef(rippleRef, touchRippleRef);\n\n  const _useIsFocusVisible = useIsFocusVisible(),\n        isFocusVisibleRef = _useIsFocusVisible.isFocusVisibleRef,\n        handleFocusVisible = _useIsFocusVisible.onFocus,\n        handleBlurVisible = _useIsFocusVisible.onBlur,\n        focusVisibleRef = _useIsFocusVisible.ref;\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        focusVisible = _React$useState2[0],\n        setFocusVisible = _React$useState2[1];\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  React.useImperativeHandle(action, () => ({\n    focusVisible: () => {\n      setFocusVisible(true);\n      buttonRef.current.focus();\n    }\n  }), []);\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        mountedState = _React$useState4[0],\n        setMountedState = _React$useState4[1];\n\n  React.useEffect(() => {\n    setMountedState(true);\n  }, []);\n  const enableTouchRipple = mountedState && !disableRipple && !disabled;\n  React.useEffect(() => {\n    if (focusVisible && focusRipple && !disableRipple && mountedState) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible, mountedState]);\n\n  function useRippleHandler(rippleAction, eventCallback, skipRippleAction = disableTouchRipple) {\n    return useEventCallback(event => {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n\n      const ignore = skipRippleAction;\n\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  const handleMouseDown = useRippleHandler('start', onMouseDown);\n  const handleContextMenu = useRippleHandler('stop', onContextMenu);\n  const handleDragLeave = useRippleHandler('stop', onDragLeave);\n  const handleMouseUp = useRippleHandler('stop', onMouseUp);\n  const handleMouseLeave = useRippleHandler('stop', event => {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  const handleTouchStart = useRippleHandler('start', onTouchStart);\n  const handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  const handleTouchMove = useRippleHandler('stop', onTouchMove);\n  const handleBlur = useRippleHandler('stop', event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  const handleFocus = useEventCallback(event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n\n  const isNonNativeButton = () => {\n    const button = buttonRef.current;\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n  /**\n   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n\n\n  const keydownRef = React.useRef(false);\n  const handleKeyDown = useEventCallback(event => {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.start(event);\n      });\n    }\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  const handleKeyUp = useEventCallback(event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.pulsate(event);\n      });\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  let ComponentProp = component;\n\n  if (ComponentProp === 'button' && (other.href || other.to)) {\n    ComponentProp = LinkComponent;\n  }\n\n  const buttonProps = {};\n\n  if (ComponentProp === 'button') {\n    buttonProps.type = type === undefined ? 'button' : type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (!other.href && !other.to) {\n      buttonProps.role = 'button';\n    }\n\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n    }\n  }\n\n  const handleOwnRef = useForkRef(focusVisibleRef, buttonRef);\n  const handleRef = useForkRef(ref, handleOwnRef);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['MUI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n\n  const ownerState = _extends({}, props, {\n    centerRipple,\n    component,\n    disabled,\n    disableRipple,\n    disableTouchRipple,\n    focusRipple,\n    tabIndex,\n    focusVisible\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return (\n    /*#__PURE__*/\n    _jsxs(ButtonBaseRoot, _extends({\n      as: ComponentProp,\n      className: clsx(classes.root, className),\n      ownerState: ownerState,\n      onBlur: handleBlur,\n      onClick: onClick,\n      onContextMenu: handleContextMenu,\n      onFocus: handleFocus,\n      onKeyDown: handleKeyDown,\n      onKeyUp: handleKeyUp,\n      onMouseDown: handleMouseDown,\n      onMouseLeave: handleMouseLeave,\n      onMouseUp: handleMouseUp,\n      onDragLeave: handleDragLeave,\n      onTouchEnd: handleTouchEnd,\n      onTouchMove: handleTouchMove,\n      onTouchStart: handleTouchStart,\n      ref: handleRef,\n      tabIndex: disabled ? -1 : tabIndex,\n      type: type\n    }, buttonProps, other, {\n      children: [children, enableTouchRipple ?\n      /*#__PURE__*/\n\n      /* TouchRipple is only needed client-side, x2 boost on the server. */\n      _jsx(TouchRipple, _extends({\n        ref: handleRippleRef,\n        center: centerRipple\n      }, TouchRippleProps)) : null]\n    }))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n\n  /**\n   * If `true`, the ripples are centered.\n   * They won't start at the cursor interaction position.\n   * @default false\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect is disabled.\n   * @default false\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * @default false\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  href: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used to render a link when the `href` prop is provided.\n   * @default 'a'\n   */\n  LinkComponent: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onContextMenu: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * A ref that points to the `TouchRipple` element.\n   */\n  touchRippleRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      pulsate: PropTypes.func.isRequired,\n      start: PropTypes.func.isRequired,\n      stop: PropTypes.func.isRequired\n    })\n  })]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default ButtonBase;","map":{"version":3,"sources":["C:/Users/HAZEM/Desktop/template/node_modules/@mui/material/ButtonBase/ButtonBase.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","elementTypeAcceptingRef","refType","composeClasses","styled","useThemeProps","useForkRef","useEventCallback","useIsFocusVisible","TouchRipple","buttonBaseClasses","getButtonBaseUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","disabled","focusVisible","focusVisibleClassName","classes","slots","root","composedClasses","ButtonBaseRoot","name","slot","overridesResolver","props","styles","display","alignItems","justifyContent","position","boxSizing","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","textDecoration","color","borderStyle","pointerEvents","colorAdjust","ButtonBase","forwardRef","inProps","ref","action","centerRipple","children","className","component","disableRipple","disableTouchRipple","focusRipple","LinkComponent","onBlur","onClick","onContextMenu","onDragLeave","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","tabIndex","TouchRippleProps","touchRippleRef","type","other","buttonRef","useRef","rippleRef","handleRippleRef","isFocusVisibleRef","handleFocusVisible","handleBlurVisible","focusVisibleRef","useState","setFocusVisible","useImperativeHandle","current","focus","mountedState","setMountedState","useEffect","enableTouchRipple","pulsate","useRippleHandler","rippleAction","eventCallback","skipRippleAction","event","ignore","handleMouseDown","handleContextMenu","handleDragLeave","handleMouseUp","handleMouseLeave","preventDefault","handleTouchStart","handleTouchEnd","handleTouchMove","handleBlur","handleFocus","currentTarget","isNonNativeButton","button","tagName","href","keydownRef","handleKeyDown","key","stop","start","target","handleKeyUp","defaultPrevented","ComponentProp","to","buttonProps","undefined","role","handleOwnRef","handleRef","process","env","NODE_ENV","console","error","join","as","center","propTypes","bool","node","object","string","any","elementType","func","sx","oneOfType","arrayOf","number","shape","isRequired","oneOf"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,MAAMC,SAAS,GAAG,CAAC,QAAD,EAAW,cAAX,EAA2B,UAA3B,EAAuC,WAAvC,EAAoD,WAApD,EAAiE,UAAjE,EAA6E,eAA7E,EAA8F,oBAA9F,EAAoH,aAApH,EAAmI,uBAAnI,EAA4J,eAA5J,EAA6K,QAA7K,EAAuL,SAAvL,EAAkM,eAAlM,EAAmN,aAAnN,EAAkO,SAAlO,EAA6O,gBAA7O,EAA+P,WAA/P,EAA4Q,SAA5Q,EAAuR,aAAvR,EAAsS,cAAtS,EAAsT,WAAtT,EAAmU,YAAnU,EAAiV,aAAjV,EAAgW,cAAhW,EAAgX,UAAhX,EAA4X,kBAA5X,EAAgZ,gBAAhZ,EAAka,MAAla,CAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,uBAAT,EAAkCC,OAAlC,QAAiD,YAAjD;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,iBAAP,IAA4BC,yBAA5B,QAA6D,qBAA7D;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;;AAEA,MAAMC,iBAAiB,GAAGC,UAAU,IAAI;AAAA,QAEpCC,QAFoC,GAMlCD,UANkC,CAEpCC,QAFoC;AAAA,QAGpCC,YAHoC,GAMlCF,UANkC,CAGpCE,YAHoC;AAAA,QAIpCC,qBAJoC,GAMlCH,UANkC,CAIpCG,qBAJoC;AAAA,QAKpCC,OALoC,GAMlCJ,UANkC,CAKpCI,OALoC;AAOtC,QAAMC,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,CAAC,MAAD,EAASL,QAAQ,IAAI,UAArB,EAAiCC,YAAY,IAAI,cAAjD;AADM,GAAd;AAGA,QAAMK,eAAe,GAAGrB,cAAc,CAACmB,KAAD,EAAQX,yBAAR,EAAmCU,OAAnC,CAAtC;;AAEA,MAAIF,YAAY,IAAIC,qBAApB,EAA2C;AACzCI,IAAAA,eAAe,CAACD,IAAhB,IAAyB,IAAGH,qBAAsB,EAAlD;AACD;;AAED,SAAOI,eAAP;AACD,CAjBD;;AAmBA,OAAO,MAAMC,cAAc,GAAGrB,MAAM,CAAC,QAAD,EAAW;AAC7CsB,EAAAA,IAAI,EAAE,eADuC;AAE7CC,EAAAA,IAAI,EAAE,MAFuC;AAG7CC,EAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACP;AAHA,CAAX,CAAN,CAI3B;AACDQ,EAAAA,OAAO,EAAE,aADR;AAEDC,EAAAA,UAAU,EAAE,QAFX;AAGDC,EAAAA,cAAc,EAAE,QAHf;AAIDC,EAAAA,QAAQ,EAAE,UAJT;AAKDC,EAAAA,SAAS,EAAE,YALV;AAMDC,EAAAA,uBAAuB,EAAE,aANxB;AAODC,EAAAA,eAAe,EAAE,aAPhB;AAQD;AACA;AACAC,EAAAA,OAAO,EAAE,CAVR;AAWDC,EAAAA,MAAM,EAAE,CAXP;AAYDC,EAAAA,MAAM,EAAE,CAZP;AAaD;AACAC,EAAAA,YAAY,EAAE,CAdb;AAeDC,EAAAA,OAAO,EAAE,CAfR;AAgBD;AACAC,EAAAA,MAAM,EAAE,SAjBP;AAkBDC,EAAAA,UAAU,EAAE,MAlBX;AAmBDC,EAAAA,aAAa,EAAE,QAnBd;AAoBDC,EAAAA,aAAa,EAAE,MApBd;AAqBD;AACAC,EAAAA,gBAAgB,EAAE,MAtBjB;AAuBD;AACAC,EAAAA,cAAc,EAAE,MAxBf;AAyBD;AACAC,EAAAA,KAAK,EAAE,SA1BN;AA2BD,yBAAuB;AACrBC,IAAAA,WAAW,EAAE,MADQ,CACD;;AADC,GA3BtB;AA+BD,GAAE,KAAIxC,iBAAiB,CAACQ,QAAS,EAAjC,GAAqC;AACnCiC,IAAAA,aAAa,EAAE,MADoB;AAEnC;AACAR,IAAAA,MAAM,EAAE;AAH2B,GA/BpC;AAoCD,kBAAgB;AACdS,IAAAA,WAAW,EAAE;AADC;AApCf,CAJ2B,CAAvB;AA4CP;;;;;;AAMA,MAAMC,UAAU;AAAG;AAAavD,KAAK,CAACwD,UAAN,CAAiB,SAASD,UAAT,CAAoBE,OAApB,EAA6BC,GAA7B,EAAkC;AACjF,QAAM3B,KAAK,GAAGxB,aAAa,CAAC;AAC1BwB,IAAAA,KAAK,EAAE0B,OADmB;AAE1B7B,IAAAA,IAAI,EAAE;AAFoB,GAAD,CAA3B;;AADiF,QAO/E+B,MAP+E,GAmC7E5B,KAnC6E,CAO/E4B,MAP+E;AAAA,8BAmC7E5B,KAnC6E,CAQ/E6B,YAR+E;AAAA,QAQ/EA,YAR+E,oCAQhE,KARgE;AAAA,QAS/EC,QAT+E,GAmC7E9B,KAnC6E,CAS/E8B,QAT+E;AAAA,QAU/EC,SAV+E,GAmC7E/B,KAnC6E,CAU/E+B,SAV+E;AAAA,2BAmC7E/B,KAnC6E,CAW/EgC,SAX+E;AAAA,QAW/EA,SAX+E,iCAWnE,QAXmE;AAAA,0BAmC7EhC,KAnC6E,CAY/EX,QAZ+E;AAAA,QAY/EA,QAZ+E,gCAYpE,KAZoE;AAAA,+BAmC7EW,KAnC6E,CAa/EiC,aAb+E;AAAA,QAa/EA,aAb+E,qCAa/D,KAb+D;AAAA,gCAmC7EjC,KAnC6E,CAc/EkC,kBAd+E;AAAA,QAc/EA,kBAd+E,sCAc1D,KAd0D;AAAA,6BAmC7ElC,KAnC6E,CAe/EmC,WAf+E;AAAA,QAe/EA,WAf+E,mCAejE,KAfiE;AAAA,+BAmC7EnC,KAnC6E,CAgB/EoC,aAhB+E;AAAA,QAgB/EA,aAhB+E,qCAgB/D,GAhB+D;AAAA,QAiB/EC,MAjB+E,GAmC7ErC,KAnC6E,CAiB/EqC,MAjB+E;AAAA,QAkB/EC,OAlB+E,GAmC7EtC,KAnC6E,CAkB/EsC,OAlB+E;AAAA,QAmB/EC,aAnB+E,GAmC7EvC,KAnC6E,CAmB/EuC,aAnB+E;AAAA,QAoB/EC,WApB+E,GAmC7ExC,KAnC6E,CAoB/EwC,WApB+E;AAAA,QAqB/EC,OArB+E,GAmC7EzC,KAnC6E,CAqB/EyC,OArB+E;AAAA,QAsB/EC,cAtB+E,GAmC7E1C,KAnC6E,CAsB/E0C,cAtB+E;AAAA,QAuB/EC,SAvB+E,GAmC7E3C,KAnC6E,CAuB/E2C,SAvB+E;AAAA,QAwB/EC,OAxB+E,GAmC7E5C,KAnC6E,CAwB/E4C,OAxB+E;AAAA,QAyB/EC,WAzB+E,GAmC7E7C,KAnC6E,CAyB/E6C,WAzB+E;AAAA,QA0B/EC,YA1B+E,GAmC7E9C,KAnC6E,CA0B/E8C,YA1B+E;AAAA,QA2B/EC,SA3B+E,GAmC7E/C,KAnC6E,CA2B/E+C,SA3B+E;AAAA,QA4B/EC,UA5B+E,GAmC7EhD,KAnC6E,CA4B/EgD,UA5B+E;AAAA,QA6B/EC,WA7B+E,GAmC7EjD,KAnC6E,CA6B/EiD,WA7B+E;AAAA,QA8B/EC,YA9B+E,GAmC7ElD,KAnC6E,CA8B/EkD,YA9B+E;AAAA,0BAmC7ElD,KAnC6E,CA+B/EmD,QA/B+E;AAAA,QA+B/EA,QA/B+E,gCA+BpE,CA/BoE;AAAA,QAgC/EC,gBAhC+E,GAmC7EpD,KAnC6E,CAgC/EoD,gBAhC+E;AAAA,QAiC/EC,cAjC+E,GAmC7ErD,KAnC6E,CAiC/EqD,cAjC+E;AAAA,QAkC/EC,IAlC+E,GAmC7EtD,KAnC6E,CAkC/EsD,IAlC+E;AAAA,QAoC3EC,KApC2E,GAoCnExF,6BAA6B,CAACiC,KAAD,EAAQhC,SAAR,CApCsC;;AAsCjF,QAAMwF,SAAS,GAAGvF,KAAK,CAACwF,MAAN,CAAa,IAAb,CAAlB;AACA,QAAMC,SAAS,GAAGzF,KAAK,CAACwF,MAAN,CAAa,IAAb,CAAlB;AACA,QAAME,eAAe,GAAGlF,UAAU,CAACiF,SAAD,EAAYL,cAAZ,CAAlC;;AAxCiF,6BA8C7E1E,iBAAiB,EA9C4D;AAAA,QA0C/EiF,iBA1C+E,sBA0C/EA,iBA1C+E;AAAA,QA2CtEC,kBA3CsE,sBA2C/EpB,OA3C+E;AAAA,QA4CvEqB,iBA5CuE,sBA4C/EzB,MA5C+E;AAAA,QA6C1E0B,eA7C0E,sBA6C/EpC,GA7C+E;;AAAA,0BA+CzC1D,KAAK,CAAC+F,QAAN,CAAe,KAAf,CA/CyC;AAAA;AAAA,QA+C1E1E,YA/C0E;AAAA,QA+C5D2E,eA/C4D;;AAiDjF,MAAI5E,QAAQ,IAAIC,YAAhB,EAA8B;AAC5B2E,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD;;AAEDhG,EAAAA,KAAK,CAACiG,mBAAN,CAA0BtC,MAA1B,EAAkC,OAAO;AACvCtC,IAAAA,YAAY,EAAE,MAAM;AAClB2E,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAT,MAAAA,SAAS,CAACW,OAAV,CAAkBC,KAAlB;AACD;AAJsC,GAAP,CAAlC,EAKI,EALJ;;AArDiF,2BA2DzCnG,KAAK,CAAC+F,QAAN,CAAe,KAAf,CA3DyC;AAAA;AAAA,QA2D1EK,YA3D0E;AAAA,QA2D5DC,eA3D4D;;AA4DjFrG,EAAAA,KAAK,CAACsG,SAAN,CAAgB,MAAM;AACpBD,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAFD,EAEG,EAFH;AAGA,QAAME,iBAAiB,GAAGH,YAAY,IAAI,CAACpC,aAAjB,IAAkC,CAAC5C,QAA7D;AACApB,EAAAA,KAAK,CAACsG,SAAN,CAAgB,MAAM;AACpB,QAAIjF,YAAY,IAAI6C,WAAhB,IAA+B,CAACF,aAAhC,IAAiDoC,YAArD,EAAmE;AACjEX,MAAAA,SAAS,CAACS,OAAV,CAAkBM,OAAlB;AACD;AACF,GAJD,EAIG,CAACxC,aAAD,EAAgBE,WAAhB,EAA6B7C,YAA7B,EAA2C+E,YAA3C,CAJH;;AAMA,WAASK,gBAAT,CAA0BC,YAA1B,EAAwCC,aAAxC,EAAuDC,gBAAgB,GAAG3C,kBAA1E,EAA8F;AAC5F,WAAOxD,gBAAgB,CAACoG,KAAK,IAAI;AAC/B,UAAIF,aAAJ,EAAmB;AACjBA,QAAAA,aAAa,CAACE,KAAD,CAAb;AACD;;AAED,YAAMC,MAAM,GAAGF,gBAAf;;AAEA,UAAI,CAACE,MAAD,IAAWrB,SAAS,CAACS,OAAzB,EAAkC;AAChCT,QAAAA,SAAS,CAACS,OAAV,CAAkBQ,YAAlB,EAAgCG,KAAhC;AACD;;AAED,aAAO,IAAP;AACD,KAZsB,CAAvB;AAaD;;AAED,QAAME,eAAe,GAAGN,gBAAgB,CAAC,OAAD,EAAU7B,WAAV,CAAxC;AACA,QAAMoC,iBAAiB,GAAGP,gBAAgB,CAAC,MAAD,EAASnC,aAAT,CAA1C;AACA,QAAM2C,eAAe,GAAGR,gBAAgB,CAAC,MAAD,EAASlC,WAAT,CAAxC;AACA,QAAM2C,aAAa,GAAGT,gBAAgB,CAAC,MAAD,EAAS3B,SAAT,CAAtC;AACA,QAAMqC,gBAAgB,GAAGV,gBAAgB,CAAC,MAAD,EAASI,KAAK,IAAI;AACzD,QAAIxF,YAAJ,EAAkB;AAChBwF,MAAAA,KAAK,CAACO,cAAN;AACD;;AAED,QAAIvC,YAAJ,EAAkB;AAChBA,MAAAA,YAAY,CAACgC,KAAD,CAAZ;AACD;AACF,GARwC,CAAzC;AASA,QAAMQ,gBAAgB,GAAGZ,gBAAgB,CAAC,OAAD,EAAUxB,YAAV,CAAzC;AACA,QAAMqC,cAAc,GAAGb,gBAAgB,CAAC,MAAD,EAAS1B,UAAT,CAAvC;AACA,QAAMwC,eAAe,GAAGd,gBAAgB,CAAC,MAAD,EAASzB,WAAT,CAAxC;AACA,QAAMwC,UAAU,GAAGf,gBAAgB,CAAC,MAAD,EAASI,KAAK,IAAI;AACnDhB,IAAAA,iBAAiB,CAACgB,KAAD,CAAjB;;AAEA,QAAIlB,iBAAiB,CAACO,OAAlB,KAA8B,KAAlC,EAAyC;AACvCF,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;;AAED,QAAI5B,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACyC,KAAD,CAAN;AACD;AACF,GAVkC,EAUhC,KAVgC,CAAnC;AAWA,QAAMY,WAAW,GAAGhH,gBAAgB,CAACoG,KAAK,IAAI;AAC5C;AACA,QAAI,CAACtB,SAAS,CAACW,OAAf,EAAwB;AACtBX,MAAAA,SAAS,CAACW,OAAV,GAAoBW,KAAK,CAACa,aAA1B;AACD;;AAED9B,IAAAA,kBAAkB,CAACiB,KAAD,CAAlB;;AAEA,QAAIlB,iBAAiB,CAACO,OAAlB,KAA8B,IAAlC,EAAwC;AACtCF,MAAAA,eAAe,CAAC,IAAD,CAAf;;AAEA,UAAIvB,cAAJ,EAAoB;AAClBA,QAAAA,cAAc,CAACoC,KAAD,CAAd;AACD;AACF;;AAED,QAAIrC,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACqC,KAAD,CAAP;AACD;AACF,GAnBmC,CAApC;;AAqBA,QAAMc,iBAAiB,GAAG,MAAM;AAC9B,UAAMC,MAAM,GAAGrC,SAAS,CAACW,OAAzB;AACA,WAAOnC,SAAS,IAAIA,SAAS,KAAK,QAA3B,IAAuC,EAAE6D,MAAM,CAACC,OAAP,KAAmB,GAAnB,IAA0BD,MAAM,CAACE,IAAnC,CAA9C;AACD,GAHD;AAIA;;;;;AAKA,QAAMC,UAAU,GAAG/H,KAAK,CAACwF,MAAN,CAAa,KAAb,CAAnB;AACA,QAAMwC,aAAa,GAAGvH,gBAAgB,CAACoG,KAAK,IAAI;AAC9C;AACA,QAAI3C,WAAW,IAAI,CAAC6D,UAAU,CAAC7B,OAA3B,IAAsC7E,YAAtC,IAAsDoE,SAAS,CAACS,OAAhE,IAA2EW,KAAK,CAACoB,GAAN,KAAc,GAA7F,EAAkG;AAChGF,MAAAA,UAAU,CAAC7B,OAAX,GAAqB,IAArB;AACAT,MAAAA,SAAS,CAACS,OAAV,CAAkBgC,IAAlB,CAAuBrB,KAAvB,EAA8B,MAAM;AAClCpB,QAAAA,SAAS,CAACS,OAAV,CAAkBiC,KAAlB,CAAwBtB,KAAxB;AACD,OAFD;AAGD;;AAED,QAAIA,KAAK,CAACuB,MAAN,KAAiBvB,KAAK,CAACa,aAAvB,IAAwCC,iBAAiB,EAAzD,IAA+Dd,KAAK,CAACoB,GAAN,KAAc,GAAjF,EAAsF;AACpFpB,MAAAA,KAAK,CAACO,cAAN;AACD;;AAED,QAAI1C,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAACmC,KAAD,CAAT;AACD,KAf6C,CAe5C;;;AAGF,QAAIA,KAAK,CAACuB,MAAN,KAAiBvB,KAAK,CAACa,aAAvB,IAAwCC,iBAAiB,EAAzD,IAA+Dd,KAAK,CAACoB,GAAN,KAAc,OAA7E,IAAwF,CAAC7G,QAA7F,EAAuG;AACrGyF,MAAAA,KAAK,CAACO,cAAN;;AAEA,UAAI/C,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACwC,KAAD,CAAP;AACD;AACF;AACF,GAzBqC,CAAtC;AA0BA,QAAMwB,WAAW,GAAG5H,gBAAgB,CAACoG,KAAK,IAAI;AAC5C;AACA;AACA,QAAI3C,WAAW,IAAI2C,KAAK,CAACoB,GAAN,KAAc,GAA7B,IAAoCxC,SAAS,CAACS,OAA9C,IAAyD7E,YAAzD,IAAyE,CAACwF,KAAK,CAACyB,gBAApF,EAAsG;AACpGP,MAAAA,UAAU,CAAC7B,OAAX,GAAqB,KAArB;AACAT,MAAAA,SAAS,CAACS,OAAV,CAAkBgC,IAAlB,CAAuBrB,KAAvB,EAA8B,MAAM;AAClCpB,QAAAA,SAAS,CAACS,OAAV,CAAkBM,OAAlB,CAA0BK,KAA1B;AACD,OAFD;AAGD;;AAED,QAAIlC,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACkC,KAAD,CAAP;AACD,KAZ2C,CAY1C;;;AAGF,QAAIxC,OAAO,IAAIwC,KAAK,CAACuB,MAAN,KAAiBvB,KAAK,CAACa,aAAlC,IAAmDC,iBAAiB,EAApE,IAA0Ed,KAAK,CAACoB,GAAN,KAAc,GAAxF,IAA+F,CAACpB,KAAK,CAACyB,gBAA1G,EAA4H;AAC1HjE,MAAAA,OAAO,CAACwC,KAAD,CAAP;AACD;AACF,GAlBmC,CAApC;AAmBA,MAAI0B,aAAa,GAAGxE,SAApB;;AAEA,MAAIwE,aAAa,KAAK,QAAlB,KAA+BjD,KAAK,CAACwC,IAAN,IAAcxC,KAAK,CAACkD,EAAnD,CAAJ,EAA4D;AAC1DD,IAAAA,aAAa,GAAGpE,aAAhB;AACD;;AAED,QAAMsE,WAAW,GAAG,EAApB;;AAEA,MAAIF,aAAa,KAAK,QAAtB,EAAgC;AAC9BE,IAAAA,WAAW,CAACpD,IAAZ,GAAmBA,IAAI,KAAKqD,SAAT,GAAqB,QAArB,GAAgCrD,IAAnD;AACAoD,IAAAA,WAAW,CAACrH,QAAZ,GAAuBA,QAAvB;AACD,GAHD,MAGO;AACL,QAAI,CAACkE,KAAK,CAACwC,IAAP,IAAe,CAACxC,KAAK,CAACkD,EAA1B,EAA8B;AAC5BC,MAAAA,WAAW,CAACE,IAAZ,GAAmB,QAAnB;AACD;;AAED,QAAIvH,QAAJ,EAAc;AACZqH,MAAAA,WAAW,CAAC,eAAD,CAAX,GAA+BrH,QAA/B;AACD;AACF;;AAED,QAAMwH,YAAY,GAAGpI,UAAU,CAACsF,eAAD,EAAkBP,SAAlB,CAA/B;AACA,QAAMsD,SAAS,GAAGrI,UAAU,CAACkD,GAAD,EAAMkF,YAAN,CAA5B;;AAEA,MAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACAhJ,IAAAA,KAAK,CAACsG,SAAN,CAAgB,MAAM;AACpB,UAAIC,iBAAiB,IAAI,CAACd,SAAS,CAACS,OAApC,EAA6C;AAC3C+C,QAAAA,OAAO,CAACC,KAAR,CAAc,CAAC,8DAAD,EAAiE,0EAAjE,EAA6IC,IAA7I,CAAkJ,IAAlJ,CAAd;AACD;AACF,KAJD,EAIG,CAAC5C,iBAAD,CAJH;AAKD;;AAED,QAAMpF,UAAU,GAAGtB,QAAQ,CAAC,EAAD,EAAKkC,KAAL,EAAY;AACrC6B,IAAAA,YADqC;AAErCG,IAAAA,SAFqC;AAGrC3C,IAAAA,QAHqC;AAIrC4C,IAAAA,aAJqC;AAKrCC,IAAAA,kBALqC;AAMrCC,IAAAA,WANqC;AAOrCgB,IAAAA,QAPqC;AAQrC7D,IAAAA;AARqC,GAAZ,CAA3B;;AAWA,QAAME,OAAO,GAAGL,iBAAiB,CAACC,UAAD,CAAjC;AACA;AAAO;AAAaF,IAAAA,KAAK,CAACU,cAAD,EAAiB9B,QAAQ,CAAC;AACjDuJ,MAAAA,EAAE,EAAEb,aAD6C;AAEjDzE,MAAAA,SAAS,EAAE5D,IAAI,CAACqB,OAAO,CAACE,IAAT,EAAeqC,SAAf,CAFkC;AAGjD3C,MAAAA,UAAU,EAAEA,UAHqC;AAIjDiD,MAAAA,MAAM,EAAEoD,UAJyC;AAKjDnD,MAAAA,OAAO,EAAEA,OALwC;AAMjDC,MAAAA,aAAa,EAAE0C,iBANkC;AAOjDxC,MAAAA,OAAO,EAAEiD,WAPwC;AAQjD/C,MAAAA,SAAS,EAAEsD,aARsC;AASjDrD,MAAAA,OAAO,EAAE0D,WATwC;AAUjDzD,MAAAA,WAAW,EAAEmC,eAVoC;AAWjDlC,MAAAA,YAAY,EAAEsC,gBAXmC;AAYjDrC,MAAAA,SAAS,EAAEoC,aAZsC;AAajD3C,MAAAA,WAAW,EAAE0C,eAboC;AAcjDlC,MAAAA,UAAU,EAAEuC,cAdqC;AAejDtC,MAAAA,WAAW,EAAEuC,eAfoC;AAgBjDtC,MAAAA,YAAY,EAAEoC,gBAhBmC;AAiBjD3D,MAAAA,GAAG,EAAEmF,SAjB4C;AAkBjD3D,MAAAA,QAAQ,EAAE9D,QAAQ,GAAG,CAAC,CAAJ,GAAQ8D,QAlBuB;AAmBjDG,MAAAA,IAAI,EAAEA;AAnB2C,KAAD,EAoB/CoD,WApB+C,EAoBlCnD,KApBkC,EAoB3B;AACrBzB,MAAAA,QAAQ,EAAE,CAACA,QAAD,EAAW0C,iBAAiB;AACtC;;AAEA;AACAxF,MAAAA,IAAI,CAACJ,WAAD,EAAcd,QAAQ,CAAC;AACzB6D,QAAAA,GAAG,EAAEgC,eADoB;AAEzB2D,QAAAA,MAAM,EAAEzF;AAFiB,OAAD,EAGvBuB,gBAHuB,CAAtB,CAJkC,GAOd,IAPd;AADW,KApB2B,CAAzB;AAAzB;AA8BD,CAxQ+B,CAAhC;AAyQA2D,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCzF,UAAU,CAAC+F;AACnD;AADwC,EAEtC;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA3F,EAAAA,MAAM,EAAEvD,OAVR;;AAYA;;;;;AAKAwD,EAAAA,YAAY,EAAE3D,SAAS,CAACsJ,IAjBxB;;AAmBA;;;AAGA1F,EAAAA,QAAQ,EAAE5D,SAAS,CAACuJ,IAtBpB;;AAwBA;;;AAGAjI,EAAAA,OAAO,EAAEtB,SAAS,CAACwJ,MA3BnB;;AA6BA;;;AAGA3F,EAAAA,SAAS,EAAE7D,SAAS,CAACyJ,MAhCrB;;AAkCA;;;;AAIA3F,EAAAA,SAAS,EAAE5D,uBAtCX;;AAwCA;;;;AAIAiB,EAAAA,QAAQ,EAAEnB,SAAS,CAACsJ,IA5CpB;;AA8CA;;;;;;;AAOAvF,EAAAA,aAAa,EAAE/D,SAAS,CAACsJ,IArDzB;;AAuDA;;;;AAIAtF,EAAAA,kBAAkB,EAAEhE,SAAS,CAACsJ,IA3D9B;;AA6DA;;;;AAIArF,EAAAA,WAAW,EAAEjE,SAAS,CAACsJ,IAjEvB;;AAmEA;;;;;;;;AAQAjI,EAAAA,qBAAqB,EAAErB,SAAS,CAACyJ,MA3EjC;;AA6EA;;;AAGA5B,EAAAA,IAAI,EAAE7H;AACN;AADe,GAEd0J,GAlFD;;AAoFA;;;;AAIAxF,EAAAA,aAAa,EAAElE,SAAS,CAAC2J,WAxFzB;;AA0FA;;;AAGAxF,EAAAA,MAAM,EAAEnE,SAAS,CAAC4J,IA7FlB;;AA+FA;;;AAGAxF,EAAAA,OAAO,EAAEpE,SAAS,CAAC4J,IAlGnB;;AAoGA;;;AAGAvF,EAAAA,aAAa,EAAErE,SAAS,CAAC4J,IAvGzB;;AAyGA;;;AAGAtF,EAAAA,WAAW,EAAEtE,SAAS,CAAC4J,IA5GvB;;AA8GA;;;AAGArF,EAAAA,OAAO,EAAEvE,SAAS,CAAC4J,IAjHnB;;AAmHA;;;;AAIApF,EAAAA,cAAc,EAAExE,SAAS,CAAC4J,IAvH1B;;AAyHA;;;AAGAnF,EAAAA,SAAS,EAAEzE,SAAS,CAAC4J,IA5HrB;;AA8HA;;;AAGAlF,EAAAA,OAAO,EAAE1E,SAAS,CAAC4J,IAjInB;;AAmIA;;;AAGAjF,EAAAA,WAAW,EAAE3E,SAAS,CAAC4J,IAtIvB;;AAwIA;;;AAGAhF,EAAAA,YAAY,EAAE5E,SAAS,CAAC4J,IA3IxB;;AA6IA;;;AAGA/E,EAAAA,SAAS,EAAE7E,SAAS,CAAC4J,IAhJrB;;AAkJA;;;AAGA9E,EAAAA,UAAU,EAAE9E,SAAS,CAAC4J,IArJtB;;AAuJA;;;AAGA7E,EAAAA,WAAW,EAAE/E,SAAS,CAAC4J,IA1JvB;;AA4JA;;;AAGA5E,EAAAA,YAAY,EAAEhF,SAAS,CAAC4J,IA/JxB;;AAiKA;;;AAGAC,EAAAA,EAAE,EAAE7J,SAAS,CAAC8J,SAAV,CAAoB,CAAC9J,SAAS,CAAC+J,OAAV,CAAkB/J,SAAS,CAAC8J,SAAV,CAAoB,CAAC9J,SAAS,CAAC4J,IAAX,EAAiB5J,SAAS,CAACwJ,MAA3B,EAAmCxJ,SAAS,CAACsJ,IAA7C,CAApB,CAAlB,CAAD,EAA6FtJ,SAAS,CAAC4J,IAAvG,EAA6G5J,SAAS,CAACwJ,MAAvH,CAApB,CApKJ;;AAsKA;;;AAGAvE,EAAAA,QAAQ,EAAEjF,SAAS,CAACgK,MAzKpB;;AA2KA;;;AAGA9E,EAAAA,gBAAgB,EAAElF,SAAS,CAACwJ,MA9K5B;;AAgLA;;;AAGArE,EAAAA,cAAc,EAAEnF,SAAS,CAAC8J,SAAV,CAAoB,CAAC9J,SAAS,CAAC4J,IAAX,EAAiB5J,SAAS,CAACiK,KAAV,CAAgB;AACnEhE,IAAAA,OAAO,EAAEjG,SAAS,CAACiK,KAAV,CAAgB;AACvB1D,MAAAA,OAAO,EAAEvG,SAAS,CAAC4J,IAAV,CAAeM,UADD;AAEvBhC,MAAAA,KAAK,EAAElI,SAAS,CAAC4J,IAAV,CAAeM,UAFC;AAGvBjC,MAAAA,IAAI,EAAEjI,SAAS,CAAC4J,IAAV,CAAeM;AAHE,KAAhB;AAD0D,GAAhB,CAAjB,CAApB,CAnLhB;;AA2LA;;;AAGA9E,EAAAA,IAAI,EAAEpF,SAAS,CAAC8J,SAAV,CAAoB,CAAC9J,SAAS,CAACmK,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,CAAhB,CAAD,EAAiDnK,SAAS,CAACyJ,MAA3D,CAApB;AA9LN,CAFF,GAiMI,KAAK,CAjMT;AAkMA,eAAenG,UAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"action\", \"centerRipple\", \"children\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"LinkComponent\", \"onBlur\", \"onClick\", \"onContextMenu\", \"onDragLeave\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"tabIndex\", \"TouchRippleProps\", \"touchRippleRef\", \"type\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nimport buttonBaseClasses, { getButtonBaseUtilityClass } from './buttonBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    focusVisible,\n    focusVisibleClassName,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  const composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes);\n\n  if (focusVisible && focusVisibleClassName) {\n    composedClasses.root += ` ${focusVisibleClassName}`;\n  }\n\n  return composedClasses;\n};\n\nexport const ButtonBaseRoot = styled('button', {\n  name: 'MuiButtonBase',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'relative',\n  boxSizing: 'border-box',\n  WebkitTapHighlightColor: 'transparent',\n  backgroundColor: 'transparent',\n  // Reset default value\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  border: 0,\n  margin: 0,\n  // Remove the margin in Safari\n  borderRadius: 0,\n  padding: 0,\n  // Remove the padding in Firefox\n  cursor: 'pointer',\n  userSelect: 'none',\n  verticalAlign: 'middle',\n  MozAppearance: 'none',\n  // Reset\n  WebkitAppearance: 'none',\n  // Reset\n  textDecoration: 'none',\n  // So we take precedent over the style of a native <a /> element.\n  color: 'inherit',\n  '&::-moz-focus-inner': {\n    borderStyle: 'none' // Remove Firefox dotted outline.\n\n  },\n  [`&.${buttonBaseClasses.disabled}`]: {\n    pointerEvents: 'none',\n    // Disable link interactions\n    cursor: 'default'\n  },\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n});\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\n\nconst ButtonBase = /*#__PURE__*/React.forwardRef(function ButtonBase(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiButtonBase'\n  });\n\n  const {\n    action,\n    centerRipple = false,\n    children,\n    className,\n    component = 'button',\n    disabled = false,\n    disableRipple = false,\n    disableTouchRipple = false,\n    focusRipple = false,\n    LinkComponent = 'a',\n    onBlur,\n    onClick,\n    onContextMenu,\n    onDragLeave,\n    onFocus,\n    onFocusVisible,\n    onKeyDown,\n    onKeyUp,\n    onMouseDown,\n    onMouseLeave,\n    onMouseUp,\n    onTouchEnd,\n    onTouchMove,\n    onTouchStart,\n    tabIndex = 0,\n    TouchRippleProps,\n    touchRippleRef,\n    type\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const buttonRef = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRippleRef = useForkRef(rippleRef, touchRippleRef);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  React.useImperativeHandle(action, () => ({\n    focusVisible: () => {\n      setFocusVisible(true);\n      buttonRef.current.focus();\n    }\n  }), []);\n  const [mountedState, setMountedState] = React.useState(false);\n  React.useEffect(() => {\n    setMountedState(true);\n  }, []);\n  const enableTouchRipple = mountedState && !disableRipple && !disabled;\n  React.useEffect(() => {\n    if (focusVisible && focusRipple && !disableRipple && mountedState) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible, mountedState]);\n\n  function useRippleHandler(rippleAction, eventCallback, skipRippleAction = disableTouchRipple) {\n    return useEventCallback(event => {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n\n      const ignore = skipRippleAction;\n\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n\n      return true;\n    });\n  }\n\n  const handleMouseDown = useRippleHandler('start', onMouseDown);\n  const handleContextMenu = useRippleHandler('stop', onContextMenu);\n  const handleDragLeave = useRippleHandler('stop', onDragLeave);\n  const handleMouseUp = useRippleHandler('stop', onMouseUp);\n  const handleMouseLeave = useRippleHandler('stop', event => {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  const handleTouchStart = useRippleHandler('start', onTouchStart);\n  const handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  const handleTouchMove = useRippleHandler('stop', onTouchMove);\n  const handleBlur = useRippleHandler('stop', event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  const handleFocus = useEventCallback(event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n\n  const isNonNativeButton = () => {\n    const button = buttonRef.current;\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n  /**\n   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n\n\n  const keydownRef = React.useRef(false);\n  const handleKeyDown = useEventCallback(event => {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.start(event);\n      });\n    }\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  const handleKeyUp = useEventCallback(event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.pulsate(event);\n      });\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    } // Keyboard accessibility for non interactive elements\n\n\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  let ComponentProp = component;\n\n  if (ComponentProp === 'button' && (other.href || other.to)) {\n    ComponentProp = LinkComponent;\n  }\n\n  const buttonProps = {};\n\n  if (ComponentProp === 'button') {\n    buttonProps.type = type === undefined ? 'button' : type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (!other.href && !other.to) {\n      buttonProps.role = 'button';\n    }\n\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n    }\n  }\n\n  const handleOwnRef = useForkRef(focusVisibleRef, buttonRef);\n  const handleRef = useForkRef(ref, handleOwnRef);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['MUI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n\n  const ownerState = _extends({}, props, {\n    centerRipple,\n    component,\n    disabled,\n    disableRipple,\n    disableTouchRipple,\n    focusRipple,\n    tabIndex,\n    focusVisible\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(ButtonBaseRoot, _extends({\n    as: ComponentProp,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    onBlur: handleBlur,\n    onClick: onClick,\n    onContextMenu: handleContextMenu,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex,\n    type: type\n  }, buttonProps, other, {\n    children: [children, enableTouchRipple ?\n    /*#__PURE__*/\n\n    /* TouchRipple is only needed client-side, x2 boost on the server. */\n    _jsx(TouchRipple, _extends({\n      ref: handleRippleRef,\n      center: centerRipple\n    }, TouchRippleProps)) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n\n  /**\n   * If `true`, the ripples are centered.\n   * They won't start at the cursor interaction position.\n   * @default false\n   */\n  centerRipple: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the touch ripple effect is disabled.\n   * @default false\n   */\n  disableTouchRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * @default false\n   */\n  focusRipple: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  href: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used to render a link when the `href` prop is provided.\n   * @default 'a'\n   */\n  LinkComponent: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onContextMenu: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number,\n\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n\n  /**\n   * A ref that points to the `TouchRipple` element.\n   */\n  touchRippleRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      pulsate: PropTypes.func.isRequired,\n      start: PropTypes.func.isRequired,\n      stop: PropTypes.func.isRequired\n    })\n  })]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default ButtonBase;"]},"metadata":{},"sourceType":"module"}