{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\HAZEM\\\\Desktop\\\\template\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\HAZEM\\\\Desktop\\\\template\\\\src\\\\app\\\\Session\\\\Typography.js\";\nimport clsx from 'clsx';\nimport React from 'react';\nimport { Box, styled } from '@mui/material';\nconst StyledBox = styled(Box)(({\n  theme,\n  textTransformStyle,\n  ellipsis\n}) => ({\n  textTransform: textTransformStyle || 'none',\n  whiteSpace: ellipsis ? 'nowrap' : 'normal',\n  overflow: ellipsis ? 'hidden' : '',\n  textOverflow: ellipsis ? 'ellipsis' : '' // color: theme.palette.primary.contrastText,\n\n}));\nexport const H1 = (_ref) => {\n  let children = _ref.children,\n      className = _ref.className,\n      ellipsis = _ref.ellipsis,\n      textTransform = _ref.textTransform,\n      props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"ellipsis\", \"textTransform\"]);\n\n  return React.createElement(StyledBox, Object.assign({\n    textTransformStyle: textTransform,\n    ellipsis: ellipsis,\n    className: clsx({\n      [className || '']: true\n    }),\n    component: \"h1\",\n    mb: 0,\n    mt: 0,\n    fontSize: \"28px\",\n    fontWeight: \"500\",\n    lineHeight: \"1.5\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), children);\n};\nexport const H2 = (_ref2) => {\n  let children = _ref2.children,\n      className = _ref2.className,\n      ellipsis = _ref2.ellipsis,\n      textTransform = _ref2.textTransform,\n      props = _objectWithoutProperties(_ref2, [\"children\", \"className\", \"ellipsis\", \"textTransform\"]);\n\n  return React.createElement(StyledBox, Object.assign({\n    textTransformStyle: textTransform,\n    ellipsis: ellipsis,\n    className: clsx({\n      [className || '']: true\n    }),\n    component: \"h2\",\n    mb: 0,\n    mt: 0,\n    fontSize: \"24px\",\n    fontWeight: \"500\",\n    lineHeight: \"1.5\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), children);\n};\nexport const H3 = (_ref3) => {\n  let children = _ref3.children,\n      className = _ref3.className,\n      ellipsis = _ref3.ellipsis,\n      textTransform = _ref3.textTransform,\n      props = _objectWithoutProperties(_ref3, [\"children\", \"className\", \"ellipsis\", \"textTransform\"]);\n\n  return React.createElement(StyledBox, Object.assign({\n    textTransformStyle: textTransform,\n    ellipsis: ellipsis,\n    className: clsx({\n      [className || '']: true\n    }),\n    component: \"h3\",\n    mb: 0,\n    mt: 0,\n    fontSize: \"18px\",\n    fontWeight: \"500\",\n    lineHeight: \"1.5\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), children);\n};\nexport const H4 = (_ref4) => {\n  let children = _ref4.children,\n      className = _ref4.className,\n      ellipsis = _ref4.ellipsis,\n      textTransform = _ref4.textTransform,\n      props = _objectWithoutProperties(_ref4, [\"children\", \"className\", \"ellipsis\", \"textTransform\"]);\n\n  return React.createElement(StyledBox, Object.assign({\n    textTransformStyle: textTransform,\n    ellipsis: ellipsis,\n    className: clsx({\n      [className || '']: true\n    }),\n    component: \"h4\",\n    mb: 0,\n    mt: 0,\n    fontSize: \"16px\",\n    fontWeight: \"500\",\n    lineHeight: \"1.5\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), children);\n};\nexport const H5 = (_ref5) => {\n  let children = _ref5.children,\n      className = _ref5.className,\n      ellipsis = _ref5.ellipsis,\n      textTransform = _ref5.textTransform,\n      props = _objectWithoutProperties(_ref5, [\"children\", \"className\", \"ellipsis\", \"textTransform\"]);\n\n  return React.createElement(StyledBox, Object.assign({\n    textTransformStyle: textTransform,\n    ellipsis: ellipsis,\n    className: clsx({\n      [className || '']: true\n    }),\n    component: \"h5\",\n    mb: 0,\n    mt: 0,\n    fontSize: \"14px\",\n    fontWeight: \"500\",\n    lineHeight: \"1.5\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), children);\n};\nexport const H6 = (_ref6) => {\n  let children = _ref6.children,\n      className = _ref6.className,\n      ellipsis = _ref6.ellipsis,\n      textTransform = _ref6.textTransform,\n      props = _objectWithoutProperties(_ref6, [\"children\", \"className\", \"ellipsis\", \"textTransform\"]);\n\n  return React.createElement(StyledBox, Object.assign({\n    textTransformStyle: textTransform,\n    ellipsis: ellipsis,\n    className: clsx({\n      [className || '']: true\n    }),\n    component: \"h6\",\n    mb: 0,\n    mt: 0,\n    fontSize: \"13px\",\n    fontWeight: \"500\",\n    lineHeight: \"1.5\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), children);\n};\nexport const Paragraph = (_ref7) => {\n  let children = _ref7.children,\n      className = _ref7.className,\n      ellipsis = _ref7.ellipsis,\n      textTransform = _ref7.textTransform,\n      props = _objectWithoutProperties(_ref7, [\"children\", \"className\", \"ellipsis\", \"textTransform\"]);\n\n  return React.createElement(StyledBox, Object.assign({\n    textTransformStyle: textTransform,\n    ellipsis: ellipsis,\n    className: clsx({\n      [className || '']: true\n    }),\n    component: \"p\",\n    mb: 0,\n    mt: 0,\n    fontSize: \"14px\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), children);\n};\nexport const Small = (_ref8) => {\n  let children = _ref8.children,\n      className = _ref8.className,\n      ellipsis = _ref8.ellipsis,\n      textTransform = _ref8.textTransform,\n      props = _objectWithoutProperties(_ref8, [\"children\", \"className\", \"ellipsis\", \"textTransform\"]);\n\n  return React.createElement(StyledBox, Object.assign({\n    textTransformStyle: textTransform,\n    ellipsis: ellipsis,\n    className: clsx({\n      [className || '']: true\n    }),\n    component: \"small\",\n    fontSize: \"12px\",\n    fontWeight: \"500\",\n    lineHeight: \"1.5\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), children);\n};\nexport const Span = (_ref9) => {\n  let children = _ref9.children,\n      className = _ref9.className,\n      ellipsis = _ref9.ellipsis,\n      textTransform = _ref9.textTransform,\n      props = _objectWithoutProperties(_ref9, [\"children\", \"className\", \"ellipsis\", \"textTransform\"]);\n\n  return React.createElement(StyledBox, Object.assign({\n    textTransformStyle: textTransform,\n    ellipsis: ellipsis,\n    className: clsx({\n      [className || '']: true\n    }),\n    component: \"span\",\n    lineHeight: \"1.5\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }), children);\n};\nexport const Tiny = (_ref10) => {\n  let children = _ref10.children,\n      className = _ref10.className,\n      ellipsis = _ref10.ellipsis,\n      textTransform = _ref10.textTransform,\n      props = _objectWithoutProperties(_ref10, [\"children\", \"className\", \"ellipsis\", \"textTransform\"]);\n\n  return React.createElement(StyledBox, Object.assign({\n    textTransformStyle: textTransform,\n    ellipsis: ellipsis,\n    className: clsx({\n      [className || '']: true\n    }),\n    component: \"small\",\n    fontSize: \"10px\",\n    lineHeight: \"1.5\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }), children);\n};","map":{"version":3,"sources":["C:/Users/HAZEM/Desktop/template/src/app/Session/Typography.js"],"names":["clsx","React","Box","styled","StyledBox","theme","textTransformStyle","ellipsis","textTransform","whiteSpace","overflow","textOverflow","H1","children","className","props","H2","H3","H4","H5","H6","Paragraph","Small","Span","Tiny"],"mappings":"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","sourcesContent":["import clsx from 'clsx'\r\nimport React from 'react'\r\nimport { Box, styled } from '@mui/material'\r\n\r\nconst StyledBox = styled(Box)(({ theme, textTransformStyle, ellipsis }) => ({\r\n    textTransform: textTransformStyle || 'none',\r\n    whiteSpace: ellipsis ? 'nowrap' : 'normal',\r\n    overflow: ellipsis ? 'hidden' : '',\r\n    textOverflow: ellipsis ? 'ellipsis' : '',\r\n    // color: theme.palette.primary.contrastText,\r\n}))\r\n\r\nexport const H1 = ({\r\n    children,\r\n    className,\r\n    ellipsis,\r\n    textTransform,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledBox\r\n            textTransformStyle={textTransform}\r\n            ellipsis={ellipsis}\r\n            className={clsx({ [className || '']: true })}\r\n            component=\"h1\"\r\n            mb={0}\r\n            mt={0}\r\n            fontSize=\"28px\"\r\n            fontWeight=\"500\"\r\n            lineHeight=\"1.5\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledBox>\r\n    )\r\n}\r\n\r\nexport const H2 = ({\r\n    children,\r\n    className,\r\n    ellipsis,\r\n    textTransform,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledBox\r\n            textTransformStyle={textTransform}\r\n            ellipsis={ellipsis}\r\n            className={clsx({ [className || '']: true })}\r\n            component=\"h2\"\r\n            mb={0}\r\n            mt={0}\r\n            fontSize=\"24px\"\r\n            fontWeight=\"500\"\r\n            lineHeight=\"1.5\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledBox>\r\n    )\r\n}\r\n\r\nexport const H3 = ({\r\n    children,\r\n    className,\r\n    ellipsis,\r\n    textTransform,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledBox\r\n            textTransformStyle={textTransform}\r\n            ellipsis={ellipsis}\r\n            className={clsx({ [className || '']: true })}\r\n            component=\"h3\"\r\n            mb={0}\r\n            mt={0}\r\n            fontSize=\"18px\"\r\n            fontWeight=\"500\"\r\n            lineHeight=\"1.5\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledBox>\r\n    )\r\n}\r\n\r\nexport const H4 = ({\r\n    children,\r\n    className,\r\n    ellipsis,\r\n    textTransform,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledBox\r\n            textTransformStyle={textTransform}\r\n            ellipsis={ellipsis}\r\n            className={clsx({\r\n                [className || '']: true,\r\n            })}\r\n            component=\"h4\"\r\n            mb={0}\r\n            mt={0}\r\n            fontSize=\"16px\"\r\n            fontWeight=\"500\"\r\n            lineHeight=\"1.5\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledBox>\r\n    )\r\n}\r\n\r\nexport const H5 = ({\r\n    children,\r\n    className,\r\n    ellipsis,\r\n    textTransform,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledBox\r\n            textTransformStyle={textTransform}\r\n            ellipsis={ellipsis}\r\n            className={clsx({\r\n                [className || '']: true,\r\n            })}\r\n            component=\"h5\"\r\n            mb={0}\r\n            mt={0}\r\n            fontSize=\"14px\"\r\n            fontWeight=\"500\"\r\n            lineHeight=\"1.5\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledBox>\r\n    )\r\n}\r\n\r\nexport const H6 = ({\r\n    children,\r\n    className,\r\n    ellipsis,\r\n    textTransform,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledBox\r\n            textTransformStyle={textTransform}\r\n            ellipsis={ellipsis}\r\n            className={clsx({\r\n                [className || '']: true,\r\n            })}\r\n            component=\"h6\"\r\n            mb={0}\r\n            mt={0}\r\n            fontSize=\"13px\"\r\n            fontWeight=\"500\"\r\n            lineHeight=\"1.5\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledBox>\r\n    )\r\n}\r\n\r\nexport const Paragraph = ({\r\n    children,\r\n    className,\r\n    ellipsis,\r\n    textTransform,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledBox\r\n            textTransformStyle={textTransform}\r\n            ellipsis={ellipsis}\r\n            className={clsx({\r\n                [className || '']: true,\r\n            })}\r\n            component=\"p\"\r\n            mb={0}\r\n            mt={0}\r\n            fontSize=\"14px\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledBox>\r\n    )\r\n}\r\n\r\nexport const Small = ({\r\n    children,\r\n    className,\r\n    ellipsis,\r\n    textTransform,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledBox\r\n            textTransformStyle={textTransform}\r\n            ellipsis={ellipsis}\r\n            className={clsx({\r\n                [className || '']: true,\r\n            })}\r\n            component=\"small\"\r\n            fontSize=\"12px\"\r\n            fontWeight=\"500\"\r\n            lineHeight=\"1.5\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledBox>\r\n    )\r\n}\r\n\r\nexport const Span = ({\r\n    children,\r\n    className,\r\n    ellipsis,\r\n    textTransform,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledBox\r\n            textTransformStyle={textTransform}\r\n            ellipsis={ellipsis}\r\n            className={clsx({\r\n                [className || '']: true,\r\n            })}\r\n            component=\"span\"\r\n            lineHeight=\"1.5\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledBox>\r\n    )\r\n}\r\n\r\nexport const Tiny = ({\r\n    children,\r\n    className,\r\n    ellipsis,\r\n    textTransform,\r\n    ...props\r\n}) => {\r\n    return (\r\n        <StyledBox\r\n            textTransformStyle={textTransform}\r\n            ellipsis={ellipsis}\r\n            className={clsx({\r\n                [className || '']: true,\r\n            })}\r\n            component=\"small\"\r\n            fontSize=\"10px\"\r\n            lineHeight=\"1.5\"\r\n            {...props}\r\n        >\r\n            {children}\r\n        </StyledBox>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}