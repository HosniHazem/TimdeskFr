{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\HAZEM\\\\Desktop\\\\template\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"onEnter\", \"onExited\"],\n      _excluded2 = [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\nimport styled from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const classes = ownerState.classes,\n        anchorOrigin = ownerState.anchorOrigin;\n  const slots = {\n    root: ['root', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\n\nconst SnackbarRoot = styled('div', {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const ownerState = props.ownerState;\n    return [styles.root, styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const center = _extends({}, !ownerState.isRtl && {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  }, ownerState.isRtl && {\n    right: '50%',\n    left: 'auto',\n    transform: 'translateX(50%)'\n  });\n\n  return _extends({\n    zIndex: theme.zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    left: 8,\n    right: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }, ownerState.anchorOrigin.vertical === 'top' ? {\n    top: 8\n  } : {\n    bottom: 8\n  }, ownerState.anchorOrigin.horizontal === 'left' && {\n    justifyContent: 'flex-start'\n  }, ownerState.anchorOrigin.horizontal === 'right' && {\n    justifyContent: 'flex-end'\n  }, {\n    [theme.breakpoints.up('sm')]: _extends({}, ownerState.anchorOrigin.vertical === 'top' ? {\n      top: 24\n    } : {\n      bottom: 24\n    }, ownerState.anchorOrigin.horizontal === 'center' && center, ownerState.anchorOrigin.horizontal === 'left' && _extends({}, !ownerState.isRtl && {\n      left: 24,\n      right: 'auto'\n    }, ownerState.isRtl && {\n      right: 24,\n      left: 'auto'\n    }), ownerState.anchorOrigin.horizontal === 'right' && _extends({}, !ownerState.isRtl && {\n      right: 24,\n      left: 'auto'\n    }, ownerState.isRtl && {\n      left: 24,\n      right: 'auto'\n    }))\n  });\n});\nconst Snackbar =\n/*#__PURE__*/\nReact.forwardRef(function Snackbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n\n  const action = props.action,\n        _props$anchorOrigin = props.anchorOrigin,\n        _props$anchorOrigin2 = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'left'\n  } : _props$anchorOrigin,\n        vertical = _props$anchorOrigin2.vertical,\n        horizontal = _props$anchorOrigin2.horizontal,\n        _props$autoHideDurati = props.autoHideDuration,\n        autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n        children = props.children,\n        className = props.className,\n        ClickAwayListenerProps = props.ClickAwayListenerProps,\n        ContentProps = props.ContentProps,\n        _props$disableWindowB = props.disableWindowBlurListener,\n        disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n        message = props.message,\n        onBlur = props.onBlur,\n        onClose = props.onClose,\n        onFocus = props.onFocus,\n        onMouseEnter = props.onMouseEnter,\n        onMouseLeave = props.onMouseLeave,\n        open = props.open,\n        resumeHideDuration = props.resumeHideDuration,\n        _props$TransitionComp = props.TransitionComponent,\n        TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n        _props$transitionDura = props.transitionDuration,\n        transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n        _props$TransitionProp = props.TransitionProps,\n        _props$TransitionProp2 = _props$TransitionProp === void 0 ? {} : _props$TransitionProp,\n        onEnter = _props$TransitionProp2.onEnter,\n        onExited = _props$TransitionProp2.onExited,\n        TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded),\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  const isRtl = theme.direction === 'rtl';\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin: {\n      vertical,\n      horizontal\n    },\n    isRtl\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const timerAutoHide = React.useRef();\n\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        exited = _React$useState2[0],\n        setExited = _React$useState2[1];\n\n  const handleClose = useEventCallback((...args) => {\n    if (onClose) {\n      onClose(...args);\n    }\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(() => {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  const handlePause = () => {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    handlePause();\n  };\n\n  const handleMouseEnter = event => {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    handleResume();\n  };\n\n  const handleMouseLeave = event => {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  const handleClickAway = event => {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  const handleExited = node => {\n    setExited(true);\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    setExited(false);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  React.useEffect(() => {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]);\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n\n\n    function handleKeyDown(nativeEvent) {\n      if (!nativeEvent.defaultPrevented) {\n        // IE11, Edge (prior to using Bink?) use 'Esc'\n        if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n          // not calling `preventDefault` since we don't know if people may ignore this event e.g. a permanently open snackbar\n          if (onClose) {\n            onClose(nativeEvent, 'escapeKeyDown');\n          }\n        }\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [exited, open, onClose]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return (\n    /*#__PURE__*/\n    _jsx(ClickAwayListener, _extends({\n      onClickAway: handleClickAway\n    }, ClickAwayListenerProps, {\n      children:\n      /*#__PURE__*/\n      _jsx(SnackbarRoot, _extends({\n        className: clsx(classes.root, className),\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onMouseEnter: handleMouseEnter,\n        onMouseLeave: handleMouseLeave,\n        ownerState: ownerState,\n        ref: ref // ClickAwayListener adds an `onClick` prop which results in the alert not being announced.\n        // See https://github.com/mui/material-ui/issues/29080\n        ,\n        role: \"presentation\"\n      }, other, {\n        children:\n        /*#__PURE__*/\n        _jsx(TransitionComponent, _extends({\n          appear: true,\n          in: open,\n          timeout: transitionDuration,\n          direction: vertical === 'top' ? 'down' : 'up',\n          onEnter: handleEnter,\n          onExited: handleExited\n        }, TransitionProps, {\n          children: children ||\n          /*#__PURE__*/\n          _jsx(SnackbarContent, _extends({\n            message: message,\n            action: action\n          }, ContentProps))\n        }))\n      }))\n    }))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/material-ui/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: () => null,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;","map":{"version":3,"sources":["C:/Users/HAZEM/Desktop/template/node_modules/@mui/material/Snackbar/Snackbar.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","_excluded2","React","PropTypes","clsx","unstable_composeClasses","composeClasses","ClickAwayListener","styled","useTheme","useThemeProps","useEventCallback","capitalize","Grow","SnackbarContent","getSnackbarUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","classes","anchorOrigin","slots","root","vertical","horizontal","SnackbarRoot","name","slot","overridesResolver","props","styles","theme","center","isRtl","left","right","transform","zIndex","snackbar","position","display","justifyContent","alignItems","top","bottom","breakpoints","up","Snackbar","forwardRef","inProps","ref","defaultTransitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","action","autoHideDuration","children","className","ClickAwayListenerProps","ContentProps","disableWindowBlurListener","message","onBlur","onClose","onFocus","onMouseEnter","onMouseLeave","open","resumeHideDuration","TransitionComponent","transitionDuration","TransitionProps","onEnter","onExited","other","direction","timerAutoHide","useRef","useState","exited","setExited","handleClose","args","setAutoHideTimer","autoHideDurationParam","clearTimeout","current","setTimeout","useEffect","handlePause","handleResume","useCallback","handleFocus","event","handleMouseEnter","handleBlur","handleMouseLeave","handleClickAway","handleExited","node","handleEnter","isAppearing","window","addEventListener","removeEventListener","undefined","handleKeyDown","nativeEvent","defaultPrevented","key","document","onClickAway","role","appear","in","timeout","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","number","element","object","string","bool","func","sx","oneOfType","arrayOf","elementType"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"onEnter\", \"onExited\"],\n      _excluded2 = [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport ClickAwayListener from '@mui/base/ClickAwayListener';\nimport styled from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    anchorOrigin\n  } = ownerState;\n  const slots = {\n    root: ['root', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\n\nconst SnackbarRoot = styled('div', {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const center = _extends({}, !ownerState.isRtl && {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  }, ownerState.isRtl && {\n    right: '50%',\n    left: 'auto',\n    transform: 'translateX(50%)'\n  });\n\n  return _extends({\n    zIndex: theme.zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    left: 8,\n    right: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }, ownerState.anchorOrigin.vertical === 'top' ? {\n    top: 8\n  } : {\n    bottom: 8\n  }, ownerState.anchorOrigin.horizontal === 'left' && {\n    justifyContent: 'flex-start'\n  }, ownerState.anchorOrigin.horizontal === 'right' && {\n    justifyContent: 'flex-end'\n  }, {\n    [theme.breakpoints.up('sm')]: _extends({}, ownerState.anchorOrigin.vertical === 'top' ? {\n      top: 24\n    } : {\n      bottom: 24\n    }, ownerState.anchorOrigin.horizontal === 'center' && center, ownerState.anchorOrigin.horizontal === 'left' && _extends({}, !ownerState.isRtl && {\n      left: 24,\n      right: 'auto'\n    }, ownerState.isRtl && {\n      right: 24,\n      left: 'auto'\n    }), ownerState.anchorOrigin.horizontal === 'right' && _extends({}, !ownerState.isRtl && {\n      right: 24,\n      left: 'auto'\n    }, ownerState.isRtl && {\n      left: 24,\n      right: 'auto'\n    }))\n  });\n});\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n\n  const {\n    action,\n    anchorOrigin: {\n      vertical,\n      horizontal\n    } = {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    autoHideDuration = null,\n    children,\n    className,\n    ClickAwayListenerProps,\n    ContentProps,\n    disableWindowBlurListener = false,\n    message,\n    onBlur,\n    onClose,\n    onFocus,\n    onMouseEnter,\n    onMouseLeave,\n    open,\n    resumeHideDuration,\n    TransitionComponent = Grow,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps: {\n      onEnter,\n      onExited\n    } = {}\n  } = props,\n        TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded),\n        other = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  const isRtl = theme.direction === 'rtl';\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin: {\n      vertical,\n      horizontal\n    },\n    isRtl\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const timerAutoHide = React.useRef();\n  const [exited, setExited] = React.useState(true);\n  const handleClose = useEventCallback((...args) => {\n    if (onClose) {\n      onClose(...args);\n    }\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(() => {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  const handlePause = () => {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    handlePause();\n  };\n\n  const handleMouseEnter = event => {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    handleResume();\n  };\n\n  const handleMouseLeave = event => {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  const handleClickAway = event => {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  const handleExited = node => {\n    setExited(true);\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    setExited(false);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  React.useEffect(() => {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]);\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n\n\n    function handleKeyDown(nativeEvent) {\n      if (!nativeEvent.defaultPrevented) {\n        // IE11, Edge (prior to using Bink?) use 'Esc'\n        if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n          // not calling `preventDefault` since we don't know if people may ignore this event e.g. a permanently open snackbar\n          if (onClose) {\n            onClose(nativeEvent, 'escapeKeyDown');\n          }\n        }\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [exited, open, onClose]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(SnackbarRoot, _extends({\n      className: clsx(classes.root, className),\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      ownerState: ownerState,\n      ref: ref // ClickAwayListener adds an `onClick` prop which results in the alert not being announced.\n      // See https://github.com/mui/material-ui/issues/29080\n      ,\n      role: \"presentation\"\n    }, other, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        appear: true,\n        in: open,\n        timeout: transitionDuration,\n        direction: vertical === 'top' ? 'down' : 'up',\n        onEnter: handleEnter,\n        onExited: handleExited\n      }, TransitionProps, {\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, _extends({\n          message: message,\n          action: action\n        }, ContentProps))\n      }))\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/material-ui/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: () => null,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;"]},"metadata":{},"sourceType":"module"}