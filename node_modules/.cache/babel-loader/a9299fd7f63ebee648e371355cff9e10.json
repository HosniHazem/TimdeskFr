{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"breakpoints\", \"palette\", \"spacing\", \"shape\"];\nimport { deepmerge } from '@mui/utils';\nimport createBreakpoints from './createBreakpoints';\nimport shape from './shape';\nimport createSpacing from './createSpacing';\n\nfunction createTheme(options = {}, ...args) {\n  const _options$breakpoints = options.breakpoints,\n        breakpointsInput = _options$breakpoints === void 0 ? {} : _options$breakpoints,\n        _options$palette = options.palette,\n        paletteInput = _options$palette === void 0 ? {} : _options$palette,\n        spacingInput = options.spacing,\n        _options$shape = options.shape,\n        shapeInput = _options$shape === void 0 ? {} : _options$shape,\n        other = _objectWithoutPropertiesLoose(options, _excluded);\n\n  const breakpoints = createBreakpoints(breakpointsInput);\n  const spacing = createSpacing(spacingInput);\n  let muiTheme = deepmerge({\n    breakpoints,\n    direction: 'ltr',\n    components: {},\n    // Inject component definitions.\n    palette: _extends({\n      mode: 'light'\n    }, paletteInput),\n    spacing,\n    shape: _extends({}, shape, shapeInput)\n  }, other);\n  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);\n  return muiTheme;\n}\n\nexport default createTheme;","map":{"version":3,"sources":["C:/Users/HAZEM/Desktop/template/node_modules/@mui/system/esm/createTheme/createTheme.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","deepmerge","createBreakpoints","shape","createSpacing","createTheme","options","args","breakpoints","breakpointsInput","palette","paletteInput","spacingInput","spacing","shapeInput","other","muiTheme","direction","components","mode","reduce","acc","argument"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,MAAMC,SAAS,GAAG,CAAC,aAAD,EAAgB,SAAhB,EAA2B,SAA3B,EAAsC,OAAtC,CAAlB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,WAAT,CAAqBC,OAAO,GAAG,EAA/B,EAAmC,GAAGC,IAAtC,EAA4C;AAAA,+BAMtCD,OANsC,CAExCE,WAFwC;AAAA,QAE3BC,gBAF2B,qCAER,EAFQ;AAAA,2BAMtCH,OANsC,CAGxCI,OAHwC;AAAA,QAG/BC,YAH+B,iCAGhB,EAHgB;AAAA,QAI/BC,YAJ+B,GAMtCN,OANsC,CAIxCO,OAJwC;AAAA,yBAMtCP,OANsC,CAKxCH,KALwC;AAAA,QAKjCW,UALiC,+BAKpB,EALoB;AAAA,QAOpCC,KAPoC,GAO5BhB,6BAA6B,CAACO,OAAD,EAAUN,SAAV,CAPD;;AAS1C,QAAMQ,WAAW,GAAGN,iBAAiB,CAACO,gBAAD,CAArC;AACA,QAAMI,OAAO,GAAGT,aAAa,CAACQ,YAAD,CAA7B;AACA,MAAII,QAAQ,GAAGf,SAAS,CAAC;AACvBO,IAAAA,WADuB;AAEvBS,IAAAA,SAAS,EAAE,KAFY;AAGvBC,IAAAA,UAAU,EAAE,EAHW;AAIvB;AACAR,IAAAA,OAAO,EAAEZ,QAAQ,CAAC;AAChBqB,MAAAA,IAAI,EAAE;AADU,KAAD,EAEdR,YAFc,CALM;AAQvBE,IAAAA,OARuB;AASvBV,IAAAA,KAAK,EAAEL,QAAQ,CAAC,EAAD,EAAKK,KAAL,EAAYW,UAAZ;AATQ,GAAD,EAUrBC,KAVqB,CAAxB;AAWAC,EAAAA,QAAQ,GAAGT,IAAI,CAACa,MAAL,CAAY,CAACC,GAAD,EAAMC,QAAN,KAAmBrB,SAAS,CAACoB,GAAD,EAAMC,QAAN,CAAxC,EAAyDN,QAAzD,CAAX;AACA,SAAOA,QAAP;AACD;;AAED,eAAeX,WAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"breakpoints\", \"palette\", \"spacing\", \"shape\"];\nimport { deepmerge } from '@mui/utils';\nimport createBreakpoints from './createBreakpoints';\nimport shape from './shape';\nimport createSpacing from './createSpacing';\n\nfunction createTheme(options = {}, ...args) {\n  const {\n    breakpoints: breakpointsInput = {},\n    palette: paletteInput = {},\n    spacing: spacingInput,\n    shape: shapeInput = {}\n  } = options,\n        other = _objectWithoutPropertiesLoose(options, _excluded);\n\n  const breakpoints = createBreakpoints(breakpointsInput);\n  const spacing = createSpacing(spacingInput);\n  let muiTheme = deepmerge({\n    breakpoints,\n    direction: 'ltr',\n    components: {},\n    // Inject component definitions.\n    palette: _extends({\n      mode: 'light'\n    }, paletteInput),\n    spacing,\n    shape: _extends({}, shape, shapeInput)\n  }, other);\n  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);\n  return muiTheme;\n}\n\nexport default createTheme;"]},"metadata":{},"sourceType":"module"}